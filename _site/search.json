[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Rain or Shine: Unveiling The Mysteries of Singapore Weather",
    "section": "",
    "text": "Introduction\nAs a small, low-lying city-state, Singapore is vulnerable to the effects of climate change which has brought about more extreme weather patterns - rising sea levels, dry spells and intense rainfall which at times can lead to flash floods.\n\nAccording to an infographic above by the National Climate Change Secretariat Singapore:\n\nDaily mean temperatures are projected to increase by 1.4 to 4.6 degrees celsius; and\nThe contrast between the wet months (November to January) and dry months (February and June to September) is likely to be more pronounced.\n\nIn Jan 2024, the Centre for Climate Research Singapore (CCRS) announced the Third National Climate Change Study (V3) which provided potential scenarios of our future based on low, medium, and high global greenhouse gas emissions.\n\nVery hot days will become more frequent.\nExtreme daily rainfall is projected to intensify.\nThe mean sea level around Singapore is projected to rise up to 1.15m by end century, and up to around 2m by 2150 under the high emissions scenario.\n\nIt is important that we better understand how climate change has been affecting Singapore, by understanding the trends in our daily temperatures and rainfall over the years, and utilise historical data to forecast future climate data. It will provide guidance on whether and how Singapore will need to urgently develop ways to mitigate and adapt.\n\n\nKey Observations\n\n\nShiny App\n\n\nUser Guide\n\n\nPoster"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi there, we are Group 12 of ISSS608 Visual Analytics & Applications AY2023-24 January Term!"
  },
  {
    "objectID": "Proposal/proposal.html",
    "href": "Proposal/proposal.html",
    "title": "Project Proposal",
    "section": "",
    "text": "1 Project Motivation\nAs a small, low-lying city-state, Singapore is vulnerable to the consequences of climate change, such as rising sea levels, intense rainfall, dry spells and other extreme weather events. In Jan 2024, the Centre for Climate Research Singapore (CCRS) announced the Third National Climate Change Study (V3) which provided a preview into potential scenarios of our future based on low, medium, and high global greenhouse gas emissions. Very hot days will become more frequent. Extreme daily rainfall is projected to intensify. The mean sea level around Singapore is projected to rise up to 1.15m by end century, and up to around 2m by 2150 under the high emissions scenario.\nAdapting to the effects of climate change is a national priority and Singapore has started to integrate long-term adaptation planning into national policies for key sectors including food security, public health, infrastructure resilience, flood risks, water security, coastal line and biodiversity, as indicated in its intended Nationally Determined Contribution to the United Nations Framework Convention on Climate Change (UNFCCC).\nIt is important that we take a closer look into how climate change has been affecting Singapore, by understanding the trends in our daily temperatures, rainfall and sea level rise over the years and utilise historical data to forecast future climate data. This will allow us to ascertain the severity of the impact of climate change and provide guidance as to whether Singapore will need to more urgently develop ways to mitigate and adapt.\n\n\n2 Issues to Address\n\nWhat are the trends in daily temperature across the years?\nWhat are the trends in rainfall across the years?\nWhich areas (based on weather station location) are hotter and have more rain?\nWhat is the future trend of temperature and rainfall? Is Singapore really going to get hotter and experience more rain?\nWould certain regions within Singapore experience a greater increase in temperature and precipitation as compared to other areas?\n\n\n\n3 Approach\n\nData Preparation\n\nTo make use of monthly weather data from 2014 to 2023\nDownloaded from weather.gov.sg\n\nExploratory Data Analysis (EDA)\n\nTrend of monthly temperature, and rainfall across years\nTrend of mean monthly temperature and rainfall\nGeospatial distribution of temperature and rainfall across Singapore\n\n\n\n\nConfirmatory Data Analysis (CDA)\n\nAre the changes in rainfall/ temperature statistically significant? \nAre there really certain months “drier” or “wetter”/ “hotter” or “cooler”?\nAre there certain locations “drier” or “wetter”/ “hotter” or “cooler”?\n\nForecasting\n\nTime-series forecasting of temperature, rainfall and wind speed in the next 10 to 30 years\n\n\n\n\n4 Possible Ideas for Shiny Dashboard\n\nTemperature trend across the years\n\nInteractivity: allow user to select a range of years, for whole Singapore or a particular location (based on weather stations)\n\nRain fall trend across the years\n\nInteractivity: allow user to select a range of years, for whole Singapore or a particular location (based on weather stations)\n\nProjections for temperature and rain\n\n\n\nDraft Shiny Dashboard\n\n\n\n\n\n5 Relevant Work and References\n\nhttps://climateknowledgeportal.worldbank.org/country/singapore\nhttps://www.nccs.gov.sg/ \nhttps://iopscience.iop.org/article/10.1088/1757-899X/407/1/012154/pdf\nhttps://www.sciencedirect.com/science/article/pii/S266682702100102X\nhttps://arxiv.org/pdf/1302.6613.pdf"
  },
  {
    "objectID": "Meeting_Minutes/meeting_minutes.html",
    "href": "Meeting_Minutes/meeting_minutes.html",
    "title": "Group 12 Project Meeting Minutes",
    "section": "",
    "text": "Refer to the links below for Group 12’s meeting minutes:\n\nMeeting 1\nMeeting 2\nMeeting 3\nMeeting 4"
  },
  {
    "objectID": "Analysis/CDA.html",
    "href": "Analysis/CDA.html",
    "title": "Prototype - Confirmatory Data Analysis",
    "section": "",
    "text": "The group’s Confirmatory Data Analysis seeks to address the following issues:\n\nAre the changes in rainfall and temperature over the years statistically significant? \nAre there really certain months “drier” or “wetter”/ “hotter” or “cooler”?\nAre there certain locations “drier” or “wetter”/ “hotter” or “cooler”?"
  },
  {
    "objectID": "Analysis/CDA.html#issues-to-address",
    "href": "Analysis/CDA.html#issues-to-address",
    "title": "Prototype - Confirmatory Data Analysis",
    "section": "",
    "text": "The group’s Confirmatory Data Analysis seeks to address the following issues:\n\nAre the changes in rainfall and temperature over the years statistically significant? \nAre there really certain months “drier” or “wetter”/ “hotter” or “cooler”?\nAre there certain locations “drier” or “wetter”/ “hotter” or “cooler”?"
  },
  {
    "objectID": "Analysis/CDA.html#the-data",
    "href": "Analysis/CDA.html#the-data",
    "title": "Prototype - Confirmatory Data Analysis",
    "section": "2. The Data",
    "text": "2. The Data\nFor the project, data utilised is the historical climate data from Metrological Service Singapore.\nThe team downloaded historical daily records from various weather stations across Singapore from 1980 to 2023 via API scrapping as a daily_historical.csv datafile, which was subsequently processed to weather_data_imputed.rds."
  },
  {
    "objectID": "Analysis/CDA.html#set-up",
    "href": "Analysis/CDA.html#set-up",
    "title": "Prototype - Confirmatory Data Analysis",
    "section": "3. Set-up",
    "text": "3. Set-up\n\n3.1 Installing and loading the required libraries\nThe following code chunk is used to install the necessary R packages:\n\npacman::p_load(tidyverse,ggridges,ggrepel,ggthemes,ggstatsplot,ggsignif,hrbrthemes,patchwork,dplyr, gifski, gapminder,plotly,gganimate,ggiraph,magick,car,lubridate)\n\n\n\n3.2 Importing the Dataset\n\nweather_data &lt;- read_rds(\"data/weather_data_imputed.rds\")\n\nglimpse(weather_data)\n\nRows: 1,548\nColumns: 6\nGroups: station [13]\n$ station                  &lt;chr&gt; \"Admiralty\", \"Admiralty\", \"Admiralty\", \"Admir…\n$ DATE                     &lt;date&gt; 2014-01-01, 2014-02-01, 2014-03-01, 2014-04-…\n$ mean_monthly_temperature &lt;dbl&gt; 26.22903, 25.79355, 26.76071, 27.35484, 27.81…\n$ min_monthly_temperature  &lt;dbl&gt; 21.70000, 22.40000, 21.80000, 23.50000, 22.40…\n$ max_monthly_temperature  &lt;dbl&gt; 25.30000, 24.90000, 24.90000, 25.80000, 26.50…\n$ monthly_rainfall         &lt;dbl&gt; 98.8000, 15.8000, 120.0000, 261.4000, 301.000…\n\nDT::datatable(weather_data)\n\n\n\n\n\nAs can be seen, there are a total of 1548 records across 6 variables:\n\nstation\nDATE\nmean_monthly_temperature\nmin_monthly_temperature\nmax_monthly_temperature\nmonthly_rainfalls\n\n\n\n3.3 Data Cleaning\n\n3.3.1 Check for missing values\n\nsum(is.na(weather_data))\n\n[1] 0\n\n\n\n\n3.3.2 Ensuring alignment in time period of records across weather stations\n\nStarting YearEnding Year\n\n\n\nweather_data_start &lt;- weather_data %&gt;% \n  group_by(station) %&gt;% \n  mutate(year=year(lubridate::ymd(DATE))) %&gt;%\n  summarise(earliest_year = min(year))\n\nweather_data_start\n\n# A tibble: 13 × 2\n   station               earliest_year\n   &lt;chr&gt;                         &lt;dbl&gt;\n 1 Admiralty                      2014\n 2 Ang Mo Kio                     2014\n 3 Changi                         2014\n 4 Choa Chu Kang (South)          2014\n 5 Clementi                       2014\n 6 East Coast Parkway             2014\n 7 Jurong (West)                  2014\n 8 Jurong Island                  2014\n 9 Newton                         2014\n10 Pasir Panjang                  2014\n11 Sentosa Island                 2014\n12 Tai Seng                       2014\n13 Tuas South                     2014\n\n\n\n\n\nweather_data_end &lt;- weather_data %&gt;%\n  group_by(station) %&gt;%\n  mutate(year=year(lubridate::ymd(DATE))) %&gt;%\n  summarise(latest_year = max(year))\n\nweather_data_end\n\n# A tibble: 13 × 2\n   station               latest_year\n   &lt;chr&gt;                       &lt;dbl&gt;\n 1 Admiralty                    2023\n 2 Ang Mo Kio                   2023\n 3 Changi                       2023\n 4 Choa Chu Kang (South)        2023\n 5 Clementi                     2023\n 6 East Coast Parkway           2023\n 7 Jurong (West)                2023\n 8 Jurong Island                2023\n 9 Newton                       2023\n10 Pasir Panjang                2023\n11 Sentosa Island               2023\n12 Tai Seng                     2023\n13 Tuas South                   2023\n\n\n\n\n\nThe starting and ending year of weather data across all 13 weather stations is 2014 and 2023 respectively, no further steps are required to align the time period of the data.\n\n\n3.3.3 Detailed dataset - adding year and month columns - for ease of analysis\nFor ease of analysis, the DATE in weather_data was further broken down into year and month and added as columns to weather_data_detailed:\n\nweather_data_detailed &lt;- weather_data %&gt;%\n  mutate(year=year(lubridate::ymd(DATE))) %&gt;%\n  mutate(month=month(lubridate::ymd(DATE)))\n\nglimpse(weather_data_detailed)\n\nRows: 1,548\nColumns: 8\nGroups: station [13]\n$ station                  &lt;chr&gt; \"Admiralty\", \"Admiralty\", \"Admiralty\", \"Admir…\n$ DATE                     &lt;date&gt; 2014-01-01, 2014-02-01, 2014-03-01, 2014-04-…\n$ mean_monthly_temperature &lt;dbl&gt; 26.22903, 25.79355, 26.76071, 27.35484, 27.81…\n$ min_monthly_temperature  &lt;dbl&gt; 21.70000, 22.40000, 21.80000, 23.50000, 22.40…\n$ max_monthly_temperature  &lt;dbl&gt; 25.30000, 24.90000, 24.90000, 25.80000, 26.50…\n$ monthly_rainfall         &lt;dbl&gt; 98.8000, 15.8000, 120.0000, 261.4000, 301.000…\n$ year                     &lt;dbl&gt; 2014, 2014, 2014, 2014, 2014, 2014, 2014, 201…\n$ month                    &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 1, 2, 3, 4…\n\n\nSaving it as a csv file for analysis:\n\nwrite_csv(weather_data_detailed, \"data/weather_data_detailed.csv\")\n\n\nweather_data_detailed %&gt;%\n  group_by(station) %&gt;%\n  summarise(\"Mean Temp\" = mean(mean_monthly_temperature),\n            \"Max Temp\" = max(max_monthly_temperature),\n            \"Min Temp\" = min(min_monthly_temperature),\n            \"Total Rainfall\" = sum(monthly_rainfall))\n\n# A tibble: 13 × 5\n   station               `Mean Temp` `Max Temp` `Min Temp` `Total Rainfall`\n   &lt;chr&gt;                       &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;            &lt;dbl&gt;\n 1 Admiralty                    27.7       28.5       21.4           23190.\n 2 Ang Mo Kio                   28.0       29         21.2           24737.\n 3 Changi                       28.0       29         21.1           19207.\n 4 Choa Chu Kang (South)        27.8       28.5       21.2           26331.\n 5 Clementi                     27.8       28.5       21.1           24455.\n 6 East Coast Parkway           28.2       29.7       21.1           17311.\n 7 Jurong (West)                27.5       28.7       20.4           25619.\n 8 Jurong Island                28.3       29         21.4           21888.\n 9 Newton                       27.7       28.5       21.1           22389.\n10 Pasir Panjang                28.3       29.4       21.1           21811.\n11 Sentosa Island               28.3       29         21.5           19897.\n12 Tai Seng                     28.4       29.4       21.7           23564.\n13 Tuas South                   28.2       29         21.7           24599."
  },
  {
    "objectID": "Analysis/CDA.html#confirmatory-data-analysis-cda",
    "href": "Analysis/CDA.html#confirmatory-data-analysis-cda",
    "title": "Prototype - Confirmatory Data Analysis",
    "section": "4. Confirmatory Data Analysis (CDA)",
    "text": "4. Confirmatory Data Analysis (CDA)"
  },
  {
    "objectID": "Analysis/CDA.html#cda-1---are-the-changes-in-rainfall-and-temperature-over-the-years-statistically-significant",
    "href": "Analysis/CDA.html#cda-1---are-the-changes-in-rainfall-and-temperature-over-the-years-statistically-significant",
    "title": "Prototype - Confirmatory Data Analysis",
    "section": "4.1 CDA #1 - Are the changes in rainfall and temperature over the years statistically significant? ",
    "text": "4.1 CDA #1 - Are the changes in rainfall and temperature over the years statistically significant? \nThe first CDA that I will address is whether changes in rainfall and temperature over the years are statistically significant\nAs the data ranges from 2014 to 2023, there are 10 years worth of data."
  },
  {
    "objectID": "Analysis/CDA.html#rainfall",
    "href": "Analysis/CDA.html#rainfall",
    "title": "Prototype - Confirmatory Data Analysis",
    "section": "4.1.1 Rainfall",
    "text": "4.1.1 Rainfall\n\n4.1.1.1 Historical rainfall over the years\n\nrainfall_data_year &lt;- weather_data_detailed %&gt;%\n  group_by(year) %&gt;%\n  summarise(yearly_rainfall = sum(monthly_rainfall))\n\nrainfall_data_month &lt;- weather_data_detailed %&gt;%\n  group_by(year,month) %&gt;%\n  summarise(monthly_rainfall = sum(monthly_rainfall))\n\nDT::datatable(rainfall_data_year,class = \"compact\")\n\n\n\n\nDT::datatable(rainfall_data_month,class = \"compact\")\n\n\n\n\n\nSaving it as a csv file:\n\nwrite_csv(rainfall_data_year, \"data/rainfall_data_year.csv\")\nwrite_csv(rainfall_data_month, \"data/rainfall_data_month.csv\")"
  },
  {
    "objectID": "Analysis/CDA.html#overview-of-rainfall-over-the-years",
    "href": "Analysis/CDA.html#overview-of-rainfall-over-the-years",
    "title": "Prototype - Confirmatory Data Analysis",
    "section": "Overview of rainfall over the years",
    "text": "Overview of rainfall over the years\n\np1 &lt;- ggplot(rainfall_data_year,\n             aes(y=yearly_rainfall,\n                 x = year))+\n  geom_point()+\n  geom_line() +\n  labs(title=\"Rainfall from 2014 to 2023\",\n       y = \"Rainfall volume (mm)\",\n       x = \"Year\") +\n  scale_x_continuous(breaks =seq(2014,2023,1)) +\n  theme_minimal() +\n  theme(axis.text.x=element_text(angle=90,hjust=1),panel.spacing.y = unit(5,\"lines\"),legend.position = \"none\")\n\nggplotly(p1)\n\n\n\n\n\nOver the years, the rainfall volume is generally observed to have increased. We need to examine if the differences are statistically different.\nBefore we do so, we will need to determine whether the rainfall for each year follows a normal or non-normal distribution and we visualise the distribution of rainfall using ridgeline plots, using the code chunk below.\n\n4.1.1.2 Distribution of Rainfall within the year from 2014 to 2023\n\np2 &lt;- ggplot(weather_data_detailed,\n       aes(x = monthly_rainfall,\n           y = as.factor(year), \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1,\n                       option=\"turbo\")+\n  theme_ridges()+\n  labs(title=\"Distribution of Rainfall from 2014 to 2023\",\n       y=\"Year\",\n       x=\"Rainfall Volume (mm)\")\n\np2\n\n\n\n\n\n\n\n\n\n\n4.1.1.3 Normality Test - Shapiro-Wilk Normality Test\n\nH0: Sample distribution is normal\nH1: Sample distribution is non-normal\n\nWe test whether the distribution of rainfall within the year from the period of 2014 to 2023 is normal. As the p-values are &lt; 0.05, we reject null hypothesis. There is sufficient evidence to indicate that the distribution of rainfall within the year from the period of 2014 to 2023 is non-normal.\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2014))$monthly_rainfall)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2014))$monthly_rainfall\nW = 0.9544, p-value = 7.735e-05\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2015))$monthly_rainfall)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2015))$monthly_rainfall\nW = 0.90846, p-value = 2.953e-08\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2016))$monthly_rainfall)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2016))$monthly_rainfall\nW = 0.96784, p-value = 0.001211\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2017))$monthly_rainfall)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2017))$monthly_rainfall\nW = 0.977, p-value = 0.01075\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2018))$monthly_rainfall)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2018))$monthly_rainfall\nW = 0.95739, p-value = 0.0001022\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2019))$monthly_rainfall)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2019))$monthly_rainfall\nW = 0.9572, p-value = 9.825e-05\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2020))$monthly_rainfall)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2020))$monthly_rainfall\nW = 0.97613, p-value = 0.008258\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2021))$monthly_rainfall)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2021))$monthly_rainfall\nW = 0.97156, p-value = 0.002593\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2022))$monthly_rainfall)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2022))$monthly_rainfall\nW = 0.95165, p-value = 3.158e-05\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2023))$monthly_rainfall)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2023))$monthly_rainfall\nW = 0.96388, p-value = 0.0004215\n\n\n\n\n4.1.1.4 Equal Variance Assumption Test\n\nH0: Groups (different years) have equal variances\nH1: Groups (different years) have different variances\n\n\nleveneTest(monthly_rainfall ~ as.factor(year), data = weather_data_detailed)\n\nLevene's Test for Homogeneity of Variance (center = median)\n        Df F value    Pr(&gt;F)    \ngroup    9  6.3242 7.792e-09 ***\n      1538                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nFrom the above result, we can observe that p-value &lt; 0.05. We have enough evidence to reject the null hypothesis. So the variance across the samples is not equal at 0.05 significance level.\n\nGiven the above, a non-parametric test will be utilised:"
  },
  {
    "objectID": "Analysis/CDA.html#rainfall-across-years",
    "href": "Analysis/CDA.html#rainfall-across-years",
    "title": "Prototype - Confirmatory Data Analysis",
    "section": "Rainfall across years",
    "text": "Rainfall across years\nThe hypothesis is as follows:\nH0: There is no difference between rainfall per year across 10 years.\nH1: There is a difference between rainfall per year across 10 years.\n\np3 &lt;- ggbetweenstats(\n  data = weather_data_detailed,\n  x = year, \n  y = monthly_rainfall,\n  type = \"np\",\n  pairwise.display = \"significant\",\n  conf.level = 0.95,\n  messages = FALSE,\n  title=\"Distribution of Rainfall across 10 years (2014 to 2023)\",\n  ylab = \"Rainfall volume (mm)\",\n  xlab = \"Year\",\n  ggsignif.args = list(textsize = 2)\n) +\n  theme(text = element_text(size = 10), plot.title=element_text(size=10))\n\np3\n\n\n\n\n\n\n\n\nThe plot above shows that the p-value&lt; 0.05 and for which the null hypothesis will be rejected at alpha = 0.05. There is sufficient evidence to indicate that there is a difference in the rainfall across the years from 2014 to 2023."
  },
  {
    "objectID": "Analysis/CDA.html#temperature",
    "href": "Analysis/CDA.html#temperature",
    "title": "Prototype - Confirmatory Data Analysis",
    "section": "4.1.2 Temperature",
    "text": "4.1.2 Temperature\n\n4.1.2.1 Historical temperature over the years\n\ntemp_year &lt;- weather_data_detailed %&gt;%\n  group_by(year) %&gt;%\n  summarise(meantemp = median(mean_monthly_temperature),\n            maxtemp = max(max_monthly_temperature),\n            mintemp = min(min_monthly_temperature))\nDT::datatable(temp_year,class = \"compact\")\n\n\n\n\n\n\ntemp_month &lt;- weather_data_detailed %&gt;%\n  group_by(year,month) %&gt;%\n  summarise(meantemp = median(mean_monthly_temperature),\n            maxtemp = max(max_monthly_temperature),\n            mintemp = min(min_monthly_temperature))\nDT::datatable(temp_month,class = \"compact\")\n\n\n\n\n\nSaving it as a csv file:\n\nwrite_csv(temp_year, \"data/temp_year.csv\")\nwrite_csv(temp_month, \"data/temp_month.csv\")"
  },
  {
    "objectID": "Analysis/CDA.html#overview-of-temperature-over-the-years",
    "href": "Analysis/CDA.html#overview-of-temperature-over-the-years",
    "title": "Prototype - Confirmatory Data Analysis",
    "section": "Overview of temperature over the years",
    "text": "Overview of temperature over the years\n\ncombined_data &lt;- reshape2::melt(temp_year, id.vars = \"year\", variable.name = \"temperature_type\")\n\np4 &lt;- ggplot(combined_data, \n             aes(x = year, \n                 y = value, \n                 color = temperature_type)) +\n  geom_line() +\n  labs(title = \"Temperature Trends from 2014 to 2023\",\n       y = \"Temperature (°C)\",\n       x = \"Year\",\n       color=\"Temperature Type\") +\n  scale_x_continuous(breaks = seq(2014, 2023, 1)) +\n  scale_color_manual(values = c(\"turquoise\", \"violetred2\", \"steelblue2\"), \n                      labels = c(\"Mean\", \"Max\", \"Min\")) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n        \n\np4 &lt;- ggplotly(p4, tooltip=\"all\") %&gt;%\n  layout(legend = list(x = 0.6, y = 0.2))\n\np4\n\n\n\n\n\nBased on observation, it seems like mean, max and min temperature did not undergo significant changes over the years from 2014 to 2023.\n\n4.1.2.2 Distribution of Temperature (Mean, Max and Min) from 2014 to 2023\nLikewise, to determine whether the changes in the mean, maximum and minimum temperatures are significant, we will need to determine whether the temperature data within each year follows a normal or non-normal distribution. We visualise the distribution using ridgeline plots, using the code chunks below.\n\nDistribution of Mean TemperatureDistribution of Maximum TemperatureDistribution of Minimum Temperature\n\n\n\np5 &lt;- ggplot(weather_data_detailed, \n       aes(x = mean_monthly_temperature, \n           y = as.factor(year), \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1,\n                       option=\"turbo\")+\n  theme_ridges(font_size = 25)+\n  scale_color_discrete(name = \"Year\") +\n  labs(title=\"Distribution of Mean Temperature from 2014 to 2023\",\n       y=\"Year\",\n       x=\"Temperature (°C)\")\n\np5\n\n\n\n\n\n\n\n\n\n\n\np6 &lt;- ggplot(weather_data_detailed, \n       aes(x = max_monthly_temperature, \n           y = as.factor(year), \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1,\n                       option=\"turbo\")+\n  theme_ridges(font_size = 25)+\n  scale_color_discrete(name = \"Year\") +\n  labs(title=\"Distribution of Max Temperature from 2014 to 2023\",\n       y=\"Year\",\n       x=\"Temperature (°C)\")\n\np6\n\n\n\n\n\n\n\n\n\n\n\np7 &lt;- ggplot(weather_data_detailed, \n       aes(x = min_monthly_temperature, \n           y = as.factor(year), \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1,\n                       option=\"turbo\")+\n  theme_ridges(font_size = 25)+\n  scale_color_discrete(name = \"Year\") +\n  labs(title=\"Distribution of Min Temperature from 2014 to 2023\",\n       y=\"Year\",\n       x=\"Temperature (°C)\")\n\np7\n\n\n\n\n\n\n\n\nFrom the plots above, it seems like the distribution of mean, highest maximum and lowest minimum temperature within each year is not normal.\n\n\n\n\n\n4.1.2.3 Normality Test - Shapiro-Wilk Normality Test\n\nH0: Sample distribution is normal\nH1: Sample distribution is non-normal\n\nWe test whether the distribution of mean, highest max and lowest min temperature within the years are normal:\n\nMean TemperatureHighest Max TemperatureLowest Min Temperature\n\n\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2014))$mean_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2014))$mean_monthly_temperature\nW = 0.97207, p-value = 0.003767\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2015))$mean_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2015))$mean_monthly_temperature\nW = 0.97073, p-value = 0.002304\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2016))$mean_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2016))$mean_monthly_temperature\nW = 0.99053, p-value = 0.3977\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2017))$mean_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2017))$mean_monthly_temperature\nW = 0.98704, p-value = 0.1593\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2018))$mean_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2018))$mean_monthly_temperature\nW = 0.97207, p-value = 0.002946\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2019))$mean_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2019))$mean_monthly_temperature\nW = 0.98731, p-value = 0.1679\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2020))$mean_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2020))$mean_monthly_temperature\nW = 0.98896, p-value = 0.2595\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2021))$mean_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2021))$mean_monthly_temperature\nW = 0.95964, p-value = 0.0001652\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2022))$mean_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2022))$mean_monthly_temperature\nW = 0.98295, p-value = 0.05131\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2023))$mean_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2023))$mean_monthly_temperature\nW = 0.92823, p-value = 4.848e-07\n\n\nAs the p-values for 2016, 2017, 2019 and 2020 above are &gt; 0.05, we do not reject null hypothesis. There is insufficient evidence to indicate that the distribution of mean temperature within the years is non-normal.\n\n\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2014))$max_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2014))$max_monthly_temperature\nW = 0.96936, p-value = 0.001975\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2015))$max_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2015))$max_monthly_temperature\nW = 0.97661, p-value = 0.01007\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2016))$max_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2016))$max_monthly_temperature\nW = 0.97864, p-value = 0.01766\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2017))$max_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2017))$max_monthly_temperature\nW = 0.99384, p-value = 0.7559\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2018))$max_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2018))$max_monthly_temperature\nW = 0.97442, p-value = 0.005317\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2019))$max_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2019))$max_monthly_temperature\nW = 0.98503, p-value = 0.09055\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2020))$max_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2020))$max_monthly_temperature\nW = 0.98539, p-value = 0.1\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2021))$max_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2021))$max_monthly_temperature\nW = 0.96506, p-value = 0.0005522\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2022))$max_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2022))$max_monthly_temperature\nW = 0.99089, p-value = 0.4173\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2023))$max_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2023))$max_monthly_temperature\nW = 0.94233, p-value = 5.394e-06\n\n\nThe p-values for 2017, 2019, 2020 and 2022 are &gt; 0.05, , we do not reject null hypothesis. There is insufficient evidence to indicate that the distribution of max temperature within the years is non-normal.\n\n\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2014))$min_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2014))$min_monthly_temperature\nW = 0.98877, p-value = 0.2719\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2015))$min_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2015))$min_monthly_temperature\nW = 0.98348, p-value = 0.06236\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2016))$min_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2016))$min_monthly_temperature\nW = 0.97812, p-value = 0.01542\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2017))$min_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2017))$min_monthly_temperature\nW = 0.99338, p-value = 0.7014\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2018))$min_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2018))$min_monthly_temperature\nW = 0.98093, p-value = 0.02955\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2019))$min_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2019))$min_monthly_temperature\nW = 0.99246, p-value = 0.5871\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2020))$min_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2020))$min_monthly_temperature\nW = 0.98523, p-value = 0.09576\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2021))$min_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2021))$min_monthly_temperature\nW = 0.98108, p-value = 0.03081\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2022))$min_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2022))$min_monthly_temperature\nW = 0.98104, p-value = 0.0305\n\nshapiro.test((weather_data_detailed %&gt;%\n  filter(year == 2023))$min_monthly_temperature)\n\n\n    Shapiro-Wilk normality test\n\ndata:  (weather_data_detailed %&gt;% filter(year == 2023))$min_monthly_temperature\nW = 0.98459, p-value = 0.08024\n\n\nThe p-values for 2014, 2015, 2017, 2019, 2020.and 2023 are &gt; 0.05, , we do not reject null hypothesis. There is insufficient evidence to indicate that the distribution of min temperature within the years is non-normal.\n\n\n\n\n\n4.1.2.4 Equal Variance Assumption Test\n\nH0: Groups (different years) have equal variances\nH1: Groups (different years) have different variances\n\n\nMean TemperatureMax TemperatureMin Temperature\n\n\n\nleveneTest(mean_monthly_temperature ~ as.factor(year), data = weather_data_detailed)\n\nLevene's Test for Homogeneity of Variance (center = median)\n        Df F value    Pr(&gt;F)    \ngroup    9  13.274 &lt; 2.2e-16 ***\n      1538                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\nleveneTest(max_monthly_temperature ~ as.factor(year), data = weather_data_detailed)\n\nLevene's Test for Homogeneity of Variance (center = median)\n        Df F value    Pr(&gt;F)    \ngroup    9  10.751 2.501e-16 ***\n      1538                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\nleveneTest(min_monthly_temperature ~ as.factor(year), data = weather_data_detailed)\n\nLevene's Test for Homogeneity of Variance (center = median)\n        Df F value    Pr(&gt;F)    \ngroup    9  7.4888 8.757e-11 ***\n      1538                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\nBased on the Levene Test, p-value of &lt; 0.05 were observed, we can reject null hypothesis and that there is sufficient evidence to indicate that the groups (different years) have different variances.\nTaking in results from the normality test and Levene test, non-parametric tests will be used for the CDA of mean, max and min temperatures.\n\nMean Temperature by yearMax Temperature by yearMin Temperature by year\n\n\nThe hypothesis is as follows:\nH0: There is no difference between mean temperature of each year across 10 years.\nH1: There is a difference between mean temperature of each year across 10 years.\n\np8 &lt;- ggbetweenstats(\n  data = weather_data_detailed,\n  x = year, \n  y = mean_monthly_temperature,\n  type = \"np\",\n  pairwise.display = \"significant\",\n  conf.level = 0.95,\n  messages = FALSE,\n  title=\"Distribution of Mean Temperature of each year across 10 years (2014 to 2023)\",\n  ylab = \"Temperature (°C)\",\n  xlab = \"Year\",\n  ggsignif.args = list(textsize = 5)\n) +\n  theme(text = element_text(size = 20),plot.title=element_text(size=20))\np8\n\n\n\n\n\n\n\n\nThe plot above shows that the p-value of the test &lt; 0.05, for which we reject the null hypothesis at alpha = 0.05. There is sufficient evidence to indicate that there is a difference in the mean temperature across the years from 2014 to 2023.\n\n\nThe hypothesis is as follows:\nH0: There is no difference between max temperature of each year across 10 years.\nH1: There is a difference between max temperature of each year across 10 years.\n\np9 &lt;- ggbetweenstats(\n  data = weather_data_detailed,\n  x = year, \n  y = max_monthly_temperature,\n  type = \"np\",\n  pairwise.display = \"signficant\",\n  conf.level = 0.95,\n  messages = FALSE,\n  title=\"Distribution of Max Temperature of each year across 10 years (2014 to 2023)\",\n  ylab = \"Temperature (°C)\",\n  xlab = \"Year\",\n  ggsignif.args = list(textsize = 5)\n) +\n  theme(text = element_text(size = 20),plot.title=element_text(size=20))\np9\n\n\n\n\n\n\n\n\nThe plot above shows that the p-value of the test &lt; 0.05, for which we reject the null hypothesis at alpha = 0.05. There is sufficient evidence to indicate that there is a difference in the highest max temperature across the years from 2014 to 2023.\n\n\nThe hypothesis is as follows:\nH0: There is no difference between min temperature per year across 10 years.\nH1: There is a difference between min temperature per year across 10 years.\n\np10 &lt;- ggbetweenstats(\n  data = weather_data_detailed,\n  x = year, \n  y = min_monthly_temperature,\n  type = \"np\",\n  pairwise.display = \"significant\",\n  conf.level = 0.95,\n  messages = FALSE,\n  title=\"Distribution of Min Temperature of each year across 10 years (2014 to 2023)\",\n  ylab = \"Temperature (°C)\",\n  xlab = \"Year\",\n  ggsignif.args = list(textsize = 5)\n) +\n  theme(text = element_text(size = 20),plot.title=element_text(size=20))\np10\n\n\n\n\n\n\n\n\nThe plot above shows that the p-value of the test &lt; 0.05, for which we reject the null hypothesis at alpha = 0.05. There is sufficient evidence to indicate that there is a difference in the min temperature across the years from 2014 to 2023."
  },
  {
    "objectID": "Analysis/CDA.html#cda-2---are-there-really-certain-months-drier-or-wetter-hotter-or-cooler",
    "href": "Analysis/CDA.html#cda-2---are-there-really-certain-months-drier-or-wetter-hotter-or-cooler",
    "title": "Prototype - Confirmatory Data Analysis",
    "section": "4.2 CDA #2 - Are there really certain months “drier” or “wetter”/ “hotter” or “cooler”?",
    "text": "4.2 CDA #2 - Are there really certain months “drier” or “wetter”/ “hotter” or “cooler”?"
  },
  {
    "objectID": "Analysis/CDA.html#rainfall-1",
    "href": "Analysis/CDA.html#rainfall-1",
    "title": "Prototype - Confirmatory Data Analysis",
    "section": "4.2.1 Rainfall",
    "text": "4.2.1 Rainfall\n\n4.2.1.1 Rainfall across different months\n\np11 &lt;- ggplot(rainfall_data_month,\n             aes(y=monthly_rainfall,\n                 x = as.factor(month),\n                 fill = as.factor(year))) +\n  geom_bar(stat = \"identity\")+\n  facet_wrap(~year, scales = \"free_x\") +\n  labs(title=\"Monthly rainfall each year from 2014 to 2023\",\n       y = \"Rainfall volume (mm)\",\n       x = \"Month\") +\n  theme_minimal()+\n  theme(panel.spacing.y = unit(10, \"lines\"))+\n  scale_fill_discrete(name = \"Year\")\n\nggplotly(p11)\n\n\n\n\n\nFrom the above plots, in 2014 and 2015, it can be seen that rainfall volume is higher in the later months of the year however this is less obvious after 2016. Notably, in 2021, a higher volume of rainfall was seen in January as compared to December.\nA cycle plot can also be used to visualise the monthly trend of rainfall over the years from 2014 to 2023:\n\n\nCycle plot\n\nhline.data &lt;- rainfall_data_month %&gt;%\n  group_by(month) %&gt;%\n  summarise(avgvalue = mean(monthly_rainfall))\n\n\np12 &lt;- ggplot() +\n  geom_line(data = rainfall_data_month,\n            aes(x = year,\n                y = monthly_rainfall,\n                group = month,\n                colour = as.factor(month)))+\n              geom_hline(aes(yintercept=avgvalue),\n                         data=hline.data,\n                         linetype=6,\n                         colour=\"red\",\n                         size=0.5)+\n              facet_wrap(~month,scales = \"free_x\")+\n              labs(title = \"Rainfall by month from 2014 to 2023\",\n                   colour = \"Month\") +\n  xlab(\"Year\")+\n  ylab(\"Rainfall volume (mm)\")+\n              theme_tufte(base_family = \"Helvetica\")+ theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 1))\n\np12\n\n\n\n\n\n\n\n\nTo determine if there are certain months which are drier or wetter, we need to carry out statistical test to determine if there is a significant difference in the rainfall volume across months.\nAs data is aggregated at the monthly_rainfall level in the starting dataset weather_data, we will carry out the test below using non-parametric test however in the Shiny App, users will be given the flexibility to change the test type to parametric, robust or even bayes."
  },
  {
    "objectID": "Analysis/CDA.html#rainfall-across-months",
    "href": "Analysis/CDA.html#rainfall-across-months",
    "title": "Prototype - Confirmatory Data Analysis",
    "section": "Rainfall across months",
    "text": "Rainfall across months\nThe hypothesis is as follows:\nH0: There is no difference between rainfall across months.\nH1: There is a difference between rainfall across months.\n\np13 &lt;- ggbetweenstats(\n  data = weather_data_detailed,\n  x = month, \n  y = monthly_rainfall,\n  type = \"np\",\n  pairwise.display = \"significant\",\n  messages = FALSE,\n  title=\"Distribution of Rainfall across months (2014 to 2023)\",\n  ylab = \"Rainfall volume (mm)\",\n  xlab = \"Month\",\n  ggsignif.args = list(textsize = 5)\n) +\n  theme(text = element_text(size = 20), plot.title=element_text(size=20))\np13\n\n\n\n\n\n\n\n\nThe p-value of the test is &lt; 0.05, for which the null hypothesis will be rejected at alpha = 0.05. There is sufficient evidence to indicate that there is a difference in the rainfall across the months."
  },
  {
    "objectID": "Analysis/CDA.html#temperature-1",
    "href": "Analysis/CDA.html#temperature-1",
    "title": "Prototype - Confirmatory Data Analysis",
    "section": "4.2.2 Temperature",
    "text": "4.2.2 Temperature\n\n4.2.2.1 Temperature across different months\n\nMean TemperatureHighest Max TemperatureLowest Minimum Temperature\n\n\n\np14 &lt;- ggplot(temp_month,\n       aes(y = meantemp,\n           x = month,\n           colour = as.factor(year))) +\n  geom_line()+\n  facet_wrap(~ year,scales = \"free_x\") +\n  labs(title=\"Mean temperature from 2014 to 2023\",\n       y = \"Temperature (°C)\",\n       x = \"Year\")+\n  scale_x_continuous(breaks = seq(1,12,1))+\n  scale_color_discrete(name = \"Year\")+\n  theme_minimal() +\n  theme(panel.spacing.y = unit(5,\"lines\"),\n        axis.text.x = element_text(angle = 90))\n\nggplotly(p14)\n\n\n\n\n\n\n\n\np15 &lt;- ggplot(temp_month,\n       aes(y = maxtemp,\n           x = month,\n           colour = as.factor(year))) +\n  geom_line()+\n  facet_wrap(~year,scales = \"free_x\") +\n  labs(title=\"Max temperature from 2014 to 2023\",\n       y = \"Temperature (°C)\",\n       x = \"Year\") +\n  scale_x_continuous(breaks = 1:12, labels = 1:12)+\n  scale_color_discrete(name = \"Year\") +\n  theme_minimal() +\n  theme(panel.spacing.y = unit(5,\"lines\"))\n\nggplotly(p15)\n\n\n\n\n\n\n\n\np16 &lt;- ggplot(temp_month,\n       aes(y = mintemp,\n           x = month,\n           colour = as.factor(year))) +\n  geom_line()+\n  facet_wrap(~year,scales = \"free_x\") +\n  labs(title=\"Min temperature from 2014 to 2023\",\n       y = \"Temperature (°C)\",\n       x = \"Year\") +\n  scale_x_continuous(breaks = 1:12, labels = 1:12)+\n  scale_color_discrete(name = \"Year\") +\n  theme_minimal() +\n  theme(panel.spacing.y = unit(5,\"lines\"))\n\nggplotly(p16)"
  },
  {
    "objectID": "Analysis/CDA.html#combined-view",
    "href": "Analysis/CDA.html#combined-view",
    "title": "Prototype - Confirmatory Data Analysis",
    "section": "Combined view",
    "text": "Combined view\n\ncombined_data2 &lt;- reshape2::melt(temp_month, id.vars = c(\"year\", \"month\"), variable.name = \"temperature_type\")\n\np17 &lt;- ggplot(combined_data2, aes(x = month, \n                                 y = value,\n                                 color = temperature_type)) +\n  geom_line() +\n  facet_wrap(~ year,scales = \"free_x\")+\n  labs(title = \"Detailed Temperature Trends from 2014 to 2023\",\n       y = \"Temperature (°C)\",\n       x = \"Month\",\n       color = \"Temperature Type\") +\n  scale_x_continuous(breaks = seq(1,12, 1)) +\n  scale_color_manual(values = c(\"turquoise\", \"violetred2\", \"steelblue2\"), \n                      labels = c(\"Mean\", \"Max\", \"Min\")) +\n  theme_minimal() +\n  theme(panel.border = element_rect(color = \"lightgrey\",linetype = \"dashed\", fill = NA, size = 1))\n\np17 &lt;- ggplotly(p17, tooltip = \"all\")%&gt;%\n  layout(legend = list(x = 0.6, y = -0.1))\n\np17\n\n\n\n\n\nA cycle plot can be used to visualise the monthly trend of temperature over the years from 2014 to 2023:"
  },
  {
    "objectID": "Analysis/CDA.html#cycle-plot-1",
    "href": "Analysis/CDA.html#cycle-plot-1",
    "title": "Prototype - Confirmatory Data Analysis",
    "section": "Cycle plot",
    "text": "Cycle plot\n\nhline_mean_temp.data &lt;- temp_month %&gt;%\n  group_by(year) %&gt;%\n  summarise(avgvalue = mean(meantemp))\n\nhline_max_temp.data &lt;- temp_month %&gt;%\n  group_by(year) %&gt;%\n  summarise(avgvalue = mean(maxtemp))\n\nhline_min_temp.data &lt;- temp_month %&gt;%\n  group_by(year) %&gt;%\n  summarise(avgvalue = mean(mintemp))\n\n\np18 &lt;- ggplot() +\n  geom_line(data = temp_month,\n            aes(x = as.factor(month),\n                y = meantemp,\n                group = year,\n                colour = as.factor(year)))+\n              geom_hline(aes(yintercept=avgvalue),\n                         data=hline_mean_temp.data,\n                         linetype=6,\n                         colour=\"red\",\n                         size=0.5)+\n              facet_wrap(~year,scales = \"free_x\")+\n              labs(axis.text.x=element_blank(),\n                   title = \"Mean temperature by year from 2014 to 2023\")+\n              xlab(\"\")+\n              ylab(\"Degrees (°C)\")+\n              scale_color_discrete(name = \"Year\")+\n              theme_tufte(base_family = \"Helvetica\")\n\np18\n\n\n\n\n\n\n\n\n\np19 &lt;- ggplot() +\n  geom_line(data = temp_month,\n            aes(x = as.factor(month),\n                y = maxtemp,\n                group = year,\n                colour = as.factor(year)))+\n              geom_hline(aes(yintercept=avgvalue),\n                         data=hline_max_temp.data,\n                         linetype=6,\n                         colour=\"red\",\n                         size=0.5)+\n              facet_wrap(~year,scales = \"free_x\")+\n              labs(axis.text.x=element_blank(),\n                   title = \"Max temperature by year from 2014 to 2023\")+\n              xlab(\"\")+\n              ylab(\"Degrees (°C)\")+\n              scale_color_discrete(name = \"Year\")+\n              theme_tufte(base_family = \"Helvetica\")\n\np19\n\n\n\n\n\n\n\n\n\np20 &lt;- ggplot() +\n  geom_line(data = temp_month,\n            aes(x = as.factor(month),\n                y = mintemp,\n                group = year,\n                colour = as.factor(year)))+\n              geom_hline(aes(yintercept=avgvalue),\n                         data=hline_min_temp.data,\n                         linetype=6,\n                         colour=\"red\",\n                         size=0.5)+\n              facet_wrap(~year,scales = \"free_x\")+\n              labs(axis.text.x=element_blank(),\n                   title = \"Min temperature by year from 2014 to 2023\")+\n              xlab(\"\")+\n              ylab(\"Degrees (°C)\")+\n              scale_color_discrete(name = \"Year\")+\n              theme_tufte(base_family = \"Helvetica\")\n\np20\n\n\n\n\n\n\n\n\nAs data is aggregated at the mean_monthly_temperature, max_monthly_temperature and min_monthly_temperature level in the starting dataset weather_data, we will carry out the test below using non-parametric test however in the Shiny App, users will be given the flexibility to change the test type to parametric, robust or even bayes.\n\nMean temperature by monthMax Temperature by monthMin Temperature by month\n\n\nThe hypothesis is as follows:\nH0: There is no difference between mean temperature across months.\nH1: There is a difference between mean temperature across months.\n\np21 &lt;- ggbetweenstats(data = weather_data_detailed,\n                      x = month,\n                      y = mean_monthly_temperature,\n                      type = \"np\",\n                      pairwise.display = \"signficant\",\n                      conf.level = 0.95,\n                      messages = FALSE,\n                      title = \"Distribution of Mean Temperature by month (2014 to 2023)\",\n                      ylab = \"Temperature (°C)\",\n                      xlab = \"Month\",\n                      ggsignif.args = list(textsize =5)) +\n  theme(text = element_text(size = 20),plot.title = element_text(size = 20))\np21\n\n\n\n\n\n\n\n\nThe p-value was found to be &lt; 0.05, for which the null hypothesis will be rejected at alpha = 0.05. There is sufficient evidence to indicate that there is a difference in the mean temperature across the months.\n\n\nThe hypothesis is as follows:\nH0: There is no difference between max temperature across months.\nH1: There is a difference between max temperature across months.\n\np22 &lt;- ggbetweenstats(data = weather_data_detailed,\n                      x = month,\n                      y = max_monthly_temperature,\n                      type = \"np\",\n                      pairwise.display = \"signficant\",\n                      conf.level = 0.95,\n                      messages = FALSE,\n                      title = \"Distribution of Max Temperature by month (2014 to 2023)\",\n                      ylab = \"Temperature (°C)\",\n                      xlab = \"Month\",\n                      ggsignif.args = list(textsize =5)) +\n  theme(text = element_text(size = 20),plot.title = element_text(size = 20))\np22\n\n\n\n\n\n\n\n\nThe plot above shows p-value &lt; 0.05, for which the null hypothesis will be rejected at alpha = 0.05. There is sufficient evidence to indicate that there is a difference in the max temperature across the months.\n\n\nThe hypothesis is as follows:\nH0: There is no difference between min temperature across months.\nH1: There is a difference between min temperature across months.\n\np23 &lt;- ggbetweenstats(data = weather_data_detailed,\n                      x = month,\n                      y = min_monthly_temperature,\n                      type = \"np\",\n                      pairwise.display = \"significant\",\n                      conf.level = 0.95,\n                      messages = FALSE,\n                      title = \"Distribution of Min Temperature by month (2014 to 2023)\",\n                      ylab = \"Temperature (°C)\",\n                      xlab = \"Month\",\n                      ggsignif.args = list(textsize =5)) +\n  theme(text = element_text(size = 20),plot.title = element_text(size = 20))\np23\n\n\n\n\n\n\n\n\nThe plot above shows that the p-value of the test is&lt; 0.05, for which we reject the null hypothesis at alpha = 0.05. There is sufficient evidence to indicate that there is a difference in the min temperature across the months from 2014 to 2023."
  },
  {
    "objectID": "Analysis/CDA.html#cda-3---are-there-certain-locations-drier-or-wetter-hotter-or-cooler",
    "href": "Analysis/CDA.html#cda-3---are-there-certain-locations-drier-or-wetter-hotter-or-cooler",
    "title": "Prototype - Confirmatory Data Analysis",
    "section": "4.3 CDA #3 - Are there certain locations “drier” or “wetter”/ “hotter” or “cooler”?",
    "text": "4.3 CDA #3 - Are there certain locations “drier” or “wetter”/ “hotter” or “cooler”?"
  },
  {
    "objectID": "Analysis/CDA.html#rainfall-2",
    "href": "Analysis/CDA.html#rainfall-2",
    "title": "Prototype - Confirmatory Data Analysis",
    "section": "4.3.1 Rainfall",
    "text": "4.3.1 Rainfall\n\n4.3.1.1 Rainfall across different weather stations\n\nrainfall_data_stn &lt;- weather_data_detailed %&gt;%   \n  group_by(station,year) %&gt;%   \n  summarise(yearly_rainfall = sum(monthly_rainfall))  \nDT::datatable(rainfall_data_stn,class = \"compact\")\n\n\n\n\n\nSaving it as a csv file:\n\nwrite_csv(rainfall_data_stn, \"data/rainfall_data_stn.csv\")\n\n\np24 &lt;- ggplot(rainfall_data_stn,\n             aes(y=yearly_rainfall,\n                 x = year,\n                 group = station,\n                 color = station)) +\n  geom_line() +\n  facet_wrap(~station,scales = \"free_x\") +\n  labs(title=\"Yearly rainfall across weather stations from 2014 to 2023\",\n       y = \"Rainfall volume (mm)\",\n       x = \"Year\") +\n  theme_minimal() +\n  theme(axis.text.x=element_text(angle=90,hjust=1),panel.spacing.y = unit(5,\"lines\") )\n\nggplotly(p24)"
  },
  {
    "objectID": "Analysis/CDA.html#rainfall-across-weather-stations",
    "href": "Analysis/CDA.html#rainfall-across-weather-stations",
    "title": "Prototype - Confirmatory Data Analysis",
    "section": "Rainfall across Weather Stations",
    "text": "Rainfall across Weather Stations\nThe hypothesis is as follows:\nH0: There is no difference between rainfall across weather stations.\nH1: There is a difference between rainfall across weather stations.\n\np25 &lt;- ggbetweenstats(\n  data = weather_data_detailed,\n  x = station, \n  y = monthly_rainfall,\n  type = \"np\",\n  pairwise.display = \"significant\",\n  conf.level = 0.95,\n  messages = FALSE,\n  title=\"Distribution of Rainfall by Station\",\n  ylab = \"Rainfall volume (mm)\",\n  xlab = \"Station\",\n  ggsignif.args = list(textsize = 3)\n) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1),\n        plot.title = element_text(size = 15),\n        text = element_text(size = 15))\np25\n\n\n\n\n\n\n\n\nThe plot above shows that the p-value of the test is &lt; 0.05, for which we reject the null hypothesis at alpha = 0.05. There is sufficient evidence to indicate that there is differences in rainfall across stations.\n\n4.3.1.2 Temperature across different weather stations\n\ntemp_stn &lt;- weather_data_detailed %&gt;%\n  group_by(station,year) %&gt;%\n  summarise(meantemp = median(mean_monthly_temperature),\n            maxtemp = max(max_monthly_temperature),\n            mintemp = min(min_monthly_temperature))\n\n\nDT::datatable(temp_stn,class = \"compact\")\n\n\n\n\n\nSaving it as a csv file:\n\nwrite_csv(temp_stn, \"data/temp_stn.csv\")\n\n\nMean TemperatureMaximum TemperatureMinimum Temperature\n\n\n\np26 &lt;- ggplot(temp_stn,\n             aes(y = meantemp,\n                 x = year,\n                 group = station,\n                 color = station)) +\n  geom_line() +\n  facet_wrap(~station,scales = \"free_x\") +\n  labs(title=\"Mean temperature across weather stations from 2014 to 2023\",\n       y = \"Temperature (°C)\",\n       x = \"Year\") +\n  theme_minimal() +\n  theme(axis.text.x=element_text(angle=90,hjust=1))\n\np26 &lt;- ggplotly(p26, tooltip=\"all\",width = 800,height = 600) %&gt;% \n  layout(width = 800, height = 600)\n\np26\n\n\n\n\n\n\n\n\np27 &lt;- ggplot(temp_stn,\n             aes(y = maxtemp,\n                 x = year,\n                 group = station,\n                 color = station)) +\n  geom_line() +\n  facet_wrap(~station,scales = \"free_x\") +\n  labs(title=\"Max temperature across weather stations from 2014 to 2023\",\n       y = \"Temperature (°C)\",\n       x = \"Year\") +\n  theme_minimal() +\n  theme(axis.text.x=element_text(angle=90,hjust=1))\n\np27 &lt;- ggplotly(p27, tooltip=\"all\",width = 800,height = 600) %&gt;% \n  layout(width = 800, height = 600)\n\np27\n\n\n\n\n\nBased on observation, it seems like max temperature for each weather station did not undergo significant changes over the years from 2014 to 2023.\n\n\n\np28 &lt;- ggplot(temp_stn,\n             aes(y = mintemp,\n                 x = year,\n                 group = station,\n                 color = station)) +\n  geom_line() +\n  facet_wrap(~station,scales = \"free_x\") +\n  labs(title=\"Min temperature across weather stations from 2014 to 2023\",\n       y = \"Temperature (°C)\",\n       x = \"Year\") +\n  theme_minimal() +\n  theme(axis.text.x=element_text(angle=90,hjust=1))\n\np28 &lt;- ggplotly(p28, tooltip=\"all\",width = 800,height = 600) %&gt;% \n  layout(width = 800, height = 600)\n\np28\n\n\n\n\n\n\n\n\n\ncombined_data3 &lt;- reshape2::melt(temp_stn, id.vars = c(\"station\", \"year\"), variable.name = \"temperature_type\")\n\np29 &lt;- ggplot(combined_data3, aes(x = year, \n                                 y = value,\n                                 color = temperature_type)) +\n  geom_line() +\n  facet_wrap(~ station,scales = \"free_x\")+\n  labs(title = \"Detailed Temperature Trends across stations from 2014 to 2023\",\n       y = \"Temperature (°C)\",\n       x = \"Year\",\n       color = \"Temperature Type\") +\n  scale_x_continuous(breaks = seq(2014,2023, 1)) +\n  scale_color_manual(values = c(\"turquoise\", \"violetred2\", \"steelblue2\"), \n                      labels = c(\"Mean\", \"Max\", \"Min\")) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1),\n        panel.border = element_rect(color = \"lightgrey\",linetype = \"dashed\", fill = NA, size = 1))\n\np29 &lt;- ggplotly(p29, tooltip = \"all\", width = 800, height = 600) %&gt;% \n  layout(width = 800, height = 600)\n\np29\n\n\n\n\n\nSaving combined_data, combined_data2 and combined_data3 as csv files:\n\nwrite_csv(combined_data, \"data/combined_data.csv\")\nwrite_csv(combined_data2, \"data/combined_data2.csv\")\nwrite_csv(combined_data3, \"data/combined_data3.csv\")\n\n\nMean TemperatureMaximum TemperatureMinimum Temperature\n\n\nThe hypothesis is as follows:\nH0: There is no difference between mean temperature across weather stations.\nH1: There is a difference between mean temperature across weather stations.\n\np30 &lt;- ggbetweenstats(\n  data = weather_data_detailed,\n  x = station, \n  y = mean_monthly_temperature,\n  type = \"np\",\n  pairwise.display = \"significant\",\n  conf.level = 0.95,\n  messages = FALSE,\n  title=\"Distribution of Mean Temperature by Station\",\n  ylab = \"Temperature (°C)\",\n  xlab = \"Station\",\n  ggsignif.args = list(textsize = 3)\n) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1),\n        plot.title = element_text(size = 15),\n        text = element_text(size = 15))\np30\n\n\n\n\n\n\n\n\nThe plot above shows p-value &lt; 0.05, for which the null hypothesis will be rejected at alpha = 0.05. There is sufficient evidence to indicate that there is a difference in the mean temperature across stations. This suggests that different regions of Singapore are hotter/cooler.\n\n\nThe hypothesis is as follows:\nH0: There is no difference between maximum temperature across weather stations.\nH1: There is a difference between maximum temperature across weather stations.\n\np31 &lt;- ggbetweenstats(\n  data = weather_data_detailed,\n  x = station, \n  y = max_monthly_temperature,\n  type = \"np\",\n  pairwise.display = \"significant\",\n  conf.level = 0.95,\n  messages = FALSE,\n  title=\"Distribution of Max Temperature by Station\",\n  ylab = \"Temperature (°C)\",\n  xlab = \"Station\",\n  ggsignif.args = list(textsize = 3)\n) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1),\n        plot.title = element_text(size = 15),\n        text = element_text(size = 15))\np31\n\n\n\n\n\n\n\n\nThe plot above shows p-value of the test &lt; 0.05, for which the null hypothesis will be rejected at alpha = 0.05. There is sufficient evidence to indicate that there is a difference in the max temperature across stations. This suggests that different regions of Singapore are hotter/cooler.\n\n\nThe hypothesis is as follows:\nH0: There is no difference between minimum temperature across weather stations.\nH1: There is a difference between minimum temperature across weather stations.\n\np32 &lt;- ggbetweenstats(\n  data = weather_data_detailed,\n  x = station, \n  y = min_monthly_temperature,\n  type = \"np\",\n  pairwise.display = \"significant\",\n  conf.level = 0.95,\n  messages = FALSE,\n  title=\"Distribution of Min Temperature by Station\",\n  ylab = \"Temperature (°C)\",\n  xlab = \"Station\",\n  ggsignif.args = list(textsize = 3)\n) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1),\n        plot.title = element_text(size = 15),\n        text = element_text(size = 15))\np32\n\n\n\n\n\n\n\n\nThe plot above shows p-value of the test is &lt; 0.05, for which the null hypothesis will be rejected at alpha = 0.05. There is sufficient evidence to indicate that there is a difference in the min temperature across stations. This suggests that different regions of Singapore are hotter/cooler."
  },
  {
    "objectID": "Analysis/CDA.html#cda-summary-table",
    "href": "Analysis/CDA.html#cda-summary-table",
    "title": "Prototype - Confirmatory Data Analysis",
    "section": "4.4 CDA Summary Table",
    "text": "4.4 CDA Summary Table\n\n\n\n\n\n\n\n\nS/N\nCDA\nFindings\n\n\n\n\n1.1\nAre the changes in rainfall over the years statistically significant?\n\nOver the years, the rainfall volume is generally observed to have increased.\nBased on statistical analysis, we determined that there is sufficient evidence to indicate that there is a difference in the rainfall across the years from 2014 to 2023.\n\n\n\n1.2\nAre the changes in temperature over the years statistically significant?\n\nBased on observation, it seemed like mean, max and min temperature did not undergo significant changes over the years from 2014 to 2023.\nHowever, based on statistical tests, we determined that there is sufficient evidence to indicate that there is a difference in the mean, max and min temperature across the years from 2014 to 2023.\n\n\n\n2.1\nAre there really certain months “drier” or “wetter”?\n\nYes, there is sufficient evidence to indicate that there is a difference in the rainfall across the months.\n\n\n\n2.2\nAre there really certain months “hotter” or “cooler”?\n\nYes, there is sufficient evidence to indicate that there is a difference in the mean, max and min temperatures across the months.\n\n\n\n3.1\nAre there certain locations “drier” or “wetter”?\n\nYes, there is sufficient evidence to indicate that there is differences in rainfall across stations, indicating different locations vary in degree of dryness/wetness.\n\n\n\n3.2\nAre there certain locations “hotter” or “cooler”?\n\nYes, there is sufficient evidence to indicate that there is a difference in the mean, max and min temperatures across stations. This suggests that different regions of Singapore are hotter/cooler."
  },
  {
    "objectID": "Analysis/Forecasting.html",
    "href": "Analysis/Forecasting.html",
    "title": "Prototype - Forecasting",
    "section": "",
    "text": "Let us try some packages to manipulate and forecast time series data."
  },
  {
    "objectID": "Analysis/Forecasting.html#installing-and-launching-the-packages",
    "href": "Analysis/Forecasting.html#installing-and-launching-the-packages",
    "title": "Prototype - Forecasting",
    "section": "Installing and launching the packages",
    "text": "Installing and launching the packages\n\npacman::p_load(tidyverse, lubridate, DT, ggplot2, plotly, ggthemes, timetk, modeltime, tidymodels, xgboost, recipes, parsnip, earth)"
  },
  {
    "objectID": "Analysis/Forecasting.html#importing-the-data",
    "href": "Analysis/Forecasting.html#importing-the-data",
    "title": "Prototype - Forecasting",
    "section": "Importing the data",
    "text": "Importing the data\nWe use read_csv() function of readr to import the daily_historical csv file into R then we will use glimpse() of dplyr to learn about the associated attribute information in the dataframe.\n\n\nShow the code\ndata &lt;- read_csv(\"data/daily_historical.csv\")\nglimpse(data)\n\n\nRows: 329,156\nColumns: 13\n$ station                  &lt;chr&gt; \"Macritchie Reservoir\", \"Macritchie Reservoir…\n$ year                     &lt;dbl&gt; 1980, 1980, 1980, 1980, 1980, 1980, 1980, 198…\n$ month                    &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ day                      &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14…\n$ daily_rainfall_total     &lt;dbl&gt; 0.0, 0.0, 0.0, 0.0, 22.6, 49.6, 2.4, 0.0, 0.0…\n$ highest_30_min_rainfall  &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ highest_60_min_rainfall  &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ highest_120_min_rainfall &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ mean_temperature         &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ maximum_temperature      &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ minimum_temperature      &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ mean_wind_speed          &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ max_wind_speed           &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…"
  },
  {
    "objectID": "Analysis/Forecasting.html#creating-a-date-column",
    "href": "Analysis/Forecasting.html#creating-a-date-column",
    "title": "Prototype - Forecasting",
    "section": "Creating a date column",
    "text": "Creating a date column\n\n\nShow the code\ndata$DATE &lt;- paste(data$year, \"-\", data$month, \"-\", data$day)\ndata &lt;- data %&gt;%\n  mutate(DATE = ymd(DATE))\n\nglimpse(data)\n\n\nRows: 329,156\nColumns: 14\n$ station                  &lt;chr&gt; \"Macritchie Reservoir\", \"Macritchie Reservoir…\n$ year                     &lt;dbl&gt; 1980, 1980, 1980, 1980, 1980, 1980, 1980, 198…\n$ month                    &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ day                      &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14…\n$ daily_rainfall_total     &lt;dbl&gt; 0.0, 0.0, 0.0, 0.0, 22.6, 49.6, 2.4, 0.0, 0.0…\n$ highest_30_min_rainfall  &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ highest_60_min_rainfall  &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ highest_120_min_rainfall &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ mean_temperature         &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ maximum_temperature      &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ minimum_temperature      &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ mean_wind_speed          &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ max_wind_speed           &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ DATE                     &lt;date&gt; 1980-01-01, 1980-01-02, 1980-01-03, 1980-01-…\n\n\n\n\nShow the code\ndatacleaned &lt;- data %&gt;%\n  select(station, DATE, mean_temperature, maximum_temperature, minimum_temperature, daily_rainfall_total) %&gt;%\n  drop_na(DATE)\n\nstr(datacleaned)\n\n\ntibble [329,098 × 6] (S3: tbl_df/tbl/data.frame)\n $ station             : chr [1:329098] \"Macritchie Reservoir\" \"Macritchie Reservoir\" \"Macritchie Reservoir\" \"Macritchie Reservoir\" ...\n $ DATE                : Date[1:329098], format: \"1980-01-01\" \"1980-01-02\" ...\n $ mean_temperature    : num [1:329098] NA NA NA NA NA NA NA NA NA NA ...\n $ maximum_temperature : num [1:329098] NA NA NA NA NA NA NA NA NA NA ...\n $ minimum_temperature : num [1:329098] NA NA NA NA NA NA NA NA NA NA ...\n $ daily_rainfall_total: num [1:329098] 0 0 0 0 22.6 49.6 2.4 0 0 0 ...\n\n\n\n\nShow the code\nstationstoremove &lt;- c(\"Botanic Garden\",\"Bukit Panjang\",\"Bukit Timah\",\"Choa Chu Kang (Central)\",\"Jurong Pier\",\"Kent Ridge\", \"Kranji Reservoir\", \"Lim Chu Kang\", \"Lower Peirce Reservoir\", \"Macritchie Reservoir\",\"Mandai\", \"Marine Parade\",\"Nicoll Highway\", \"Pasir Ris (Central)\", \"Punggol\", \"Queenstown\",\"Simei\", \"Somerset (Road)\",\"Tanjong Katong\", \"Toa Payoh\", \"Tuas\", \"Ulu Pandan\", \"Upper Peirce Reservoir\",\"Whampoa\")\n\n#create a operator to exclude things \n'%!in%' &lt;- function(x,y)!('%in%'(x,y))\n\n#excluded stations that have no temp data at all \ndatacleaned &lt;- datacleaned %&gt;%\n  filter(station %!in% stationstoremove) \n\nglimpse(datacleaned)\n\n\nRows: 120,139\nColumns: 6\n$ station              &lt;chr&gt; \"Admiralty\", \"Admiralty\", \"Admiralty\", \"Admiralty…\n$ DATE                 &lt;date&gt; 2009-01-01, 2009-01-02, 2009-01-03, 2009-01-04, …\n$ mean_temperature     &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ maximum_temperature  &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ minimum_temperature  &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ daily_rainfall_total &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…"
  },
  {
    "objectID": "Analysis/Forecasting.html#period-summarisation",
    "href": "Analysis/Forecasting.html#period-summarisation",
    "title": "Prototype - Forecasting",
    "section": "Period Summarisation",
    "text": "Period Summarisation\n\nmean_monthly_temp &lt;- datacleaned %&gt;%\n  group_by(station) %&gt;%\n  summarise_by_time(\n    DATE,\n    .by = \"month\", \n    value = mean(mean_temperature),\n    .type = \"ceiling\"\n  ) %&gt;% rename(mean_monthly_temperature = value)\n\nmean_monthly_temp\n\n# A tibble: 3,947 × 3\n# Groups:   station [13]\n   station   DATE       mean_monthly_temperature\n   &lt;chr&gt;     &lt;date&gt;                        &lt;dbl&gt;\n 1 Admiralty 2009-02-01                     NA  \n 2 Admiralty 2009-03-01                     26.8\n 3 Admiralty 2009-04-01                     NA  \n 4 Admiralty 2009-05-01                     28.1\n 5 Admiralty 2009-06-01                     28.5\n 6 Admiralty 2009-07-01                     28.9\n 7 Admiralty 2009-08-01                     28.1\n 8 Admiralty 2009-09-01                     28.1\n 9 Admiralty 2009-10-01                     28.3\n10 Admiralty 2009-11-01                     28.0\n# ℹ 3,937 more rows\n\n\n\nmin_monthly_temp &lt;- datacleaned %&gt;%\n  group_by(station) %&gt;%\n  summarise_by_time(\n    DATE,\n    .by = \"month\", \n    value = min(minimum_temperature),\n    .type = \"ceiling\"\n  ) %&gt;% rename(min_monthly_temperature = value)\n\nmin_monthly_temp\n\n# A tibble: 3,947 × 3\n# Groups:   station [13]\n   station   DATE       min_monthly_temperature\n   &lt;chr&gt;     &lt;date&gt;                       &lt;dbl&gt;\n 1 Admiralty 2009-02-01                    NA  \n 2 Admiralty 2009-03-01                    23  \n 3 Admiralty 2009-04-01                    NA  \n 4 Admiralty 2009-05-01                    23.7\n 5 Admiralty 2009-06-01                    21.8\n 6 Admiralty 2009-07-01                    23.7\n 7 Admiralty 2009-08-01                    22.5\n 8 Admiralty 2009-09-01                    22.7\n 9 Admiralty 2009-10-01                    23.1\n10 Admiralty 2009-11-01                    22.2\n# ℹ 3,937 more rows\n\n\n\nmax_monthly_temp &lt;- datacleaned %&gt;%\n  group_by(station) %&gt;%\n  summarise_by_time(\n    DATE,\n    .by = \"month\", \n    value = max(minimum_temperature),\n    .type      = \"ceiling\"\n  ) %&gt;% rename(max_monthly_temperature = value)\n\nmax_monthly_temp\n\n# A tibble: 3,947 × 3\n# Groups:   station [13]\n   station   DATE       max_monthly_temperature\n   &lt;chr&gt;     &lt;date&gt;                       &lt;dbl&gt;\n 1 Admiralty 2009-02-01                    NA  \n 2 Admiralty 2009-03-01                    26  \n 3 Admiralty 2009-04-01                    NA  \n 4 Admiralty 2009-05-01                    27.7\n 5 Admiralty 2009-06-01                    27  \n 6 Admiralty 2009-07-01                    27.9\n 7 Admiralty 2009-08-01                    27.6\n 8 Admiralty 2009-09-01                    27.4\n 9 Admiralty 2009-10-01                    27.7\n10 Admiralty 2009-11-01                    26.7\n# ℹ 3,937 more rows\n\n\n\nmonthly_rf &lt;- datacleaned %&gt;%\n  group_by(station) %&gt;%\n  summarise_by_time(\n    DATE,\n    .by = \"month\", \n    value = sum(daily_rainfall_total)\n  ) %&gt;% rename(monthly_rainfall = value)\n\nmonthly_rf\n\n# A tibble: 3,947 × 3\n# Groups:   station [13]\n   station   DATE       monthly_rainfall\n   &lt;chr&gt;     &lt;date&gt;                &lt;dbl&gt;\n 1 Admiralty 2009-01-01             NA  \n 2 Admiralty 2009-02-01            148  \n 3 Admiralty 2009-03-01             NA  \n 4 Admiralty 2009-04-01            149. \n 5 Admiralty 2009-05-01            206. \n 6 Admiralty 2009-06-01             92  \n 7 Admiralty 2009-07-01            103  \n 8 Admiralty 2009-08-01             90.2\n 9 Admiralty 2009-09-01             67.6\n10 Admiralty 2009-10-01            160  \n# ℹ 3,937 more rows"
  },
  {
    "objectID": "Analysis/Forecasting.html#joining-the-data-tables",
    "href": "Analysis/Forecasting.html#joining-the-data-tables",
    "title": "Prototype - Forecasting",
    "section": "Joining the data tables",
    "text": "Joining the data tables\n\nweatherdata &lt;- left_join(mean_monthly_temp, min_monthly_temp)\nweatherdata\n\n# A tibble: 3,947 × 4\n# Groups:   station [13]\n   station   DATE       mean_monthly_temperature min_monthly_temperature\n   &lt;chr&gt;     &lt;date&gt;                        &lt;dbl&gt;                   &lt;dbl&gt;\n 1 Admiralty 2009-02-01                     NA                      NA  \n 2 Admiralty 2009-03-01                     26.8                    23  \n 3 Admiralty 2009-04-01                     NA                      NA  \n 4 Admiralty 2009-05-01                     28.1                    23.7\n 5 Admiralty 2009-06-01                     28.5                    21.8\n 6 Admiralty 2009-07-01                     28.9                    23.7\n 7 Admiralty 2009-08-01                     28.1                    22.5\n 8 Admiralty 2009-09-01                     28.1                    22.7\n 9 Admiralty 2009-10-01                     28.3                    23.1\n10 Admiralty 2009-11-01                     28.0                    22.2\n# ℹ 3,937 more rows\n\n\n\nweatherdata &lt;- left_join(weatherdata, max_monthly_temp)\nweatherdata\n\n# A tibble: 3,947 × 5\n# Groups:   station [13]\n   station   DATE       mean_monthly_temperature min_monthly_temperature\n   &lt;chr&gt;     &lt;date&gt;                        &lt;dbl&gt;                   &lt;dbl&gt;\n 1 Admiralty 2009-02-01                     NA                      NA  \n 2 Admiralty 2009-03-01                     26.8                    23  \n 3 Admiralty 2009-04-01                     NA                      NA  \n 4 Admiralty 2009-05-01                     28.1                    23.7\n 5 Admiralty 2009-06-01                     28.5                    21.8\n 6 Admiralty 2009-07-01                     28.9                    23.7\n 7 Admiralty 2009-08-01                     28.1                    22.5\n 8 Admiralty 2009-09-01                     28.1                    22.7\n 9 Admiralty 2009-10-01                     28.3                    23.1\n10 Admiralty 2009-11-01                     28.0                    22.2\n# ℹ 3,937 more rows\n# ℹ 1 more variable: max_monthly_temperature &lt;dbl&gt;\n\n\n\nweatherdata &lt;- left_join(weatherdata, monthly_rf)\nsummary(weatherdata)\n\n   station               DATE            mean_monthly_temperature\n Length:3947        Min.   :1980-02-01   Min.   :25.23           \n Class :character   1st Qu.:1996-07-01   1st Qu.:27.34           \n Mode  :character   Median :2011-04-01   Median :27.94           \n                    Mean   :2007-01-17   Mean   :27.88           \n                    3rd Qu.:2017-10-01   3rd Qu.:28.47           \n                    Max.   :2024-01-01   Max.   :29.78           \n                                         NA's   :1750            \n min_monthly_temperature max_monthly_temperature monthly_rainfall\n Min.   :20.00           Min.   :24.00           Min.   :  0.2   \n 1st Qu.:22.30           1st Qu.:26.30           1st Qu.:120.8   \n Median :22.80           Median :27.20           Median :186.6   \n Mean   :22.77           Mean   :27.12           Mean   :199.8   \n 3rd Qu.:23.30           3rd Qu.:28.00           3rd Qu.:263.0   \n Max.   :26.20           Max.   :30.00           Max.   :765.9   \n NA's   :1699            NA's   :1699            NA's   :251     \n\n\n\nweatherdata &lt;- weatherdata %&gt;%\n  filter_by_time(DATE, .start_date = \"2014-01\", .end_date = \"2023-12\")\n\n\nsummary(weatherdata)\n\n   station               DATE            mean_monthly_temperature\n Length:1548        Min.   :2014-01-01   Min.   :25.46           \n Class :character   1st Qu.:2016-07-01   1st Qu.:27.54           \n Mode  :character   Median :2019-01-01   Median :28.13           \n                    Mean   :2018-12-25   Mean   :28.05           \n                    3rd Qu.:2021-07-01   3rd Qu.:28.63           \n                    Max.   :2023-12-01   Max.   :29.78           \n                                         NA's   :227             \n min_monthly_temperature max_monthly_temperature monthly_rainfall\n Min.   :20.40           Min.   :24.20           Min.   :  0.2   \n 1st Qu.:22.40           1st Qu.:26.60           1st Qu.:115.4   \n Median :22.90           Median :27.50           Median :182.0   \n Mean   :22.91           Mean   :27.34           Mean   :192.4   \n 3rd Qu.:23.40           3rd Qu.:28.10           3rd Qu.:253.2   \n Max.   :26.20           Max.   :29.70           Max.   :692.8   \n NA's   :198             NA's   :198             NA's   :159     \n\n\n\nwrite_rds(weatherdata, \"data/weather_data.rds\")"
  },
  {
    "objectID": "Analysis/Forecasting.html#missing-value-imputation",
    "href": "Analysis/Forecasting.html#missing-value-imputation",
    "title": "Prototype - Forecasting",
    "section": "Missing value imputation",
    "text": "Missing value imputation\n\nunique(weatherdata$DATE)\n\n  [1] \"2014-01-01\" \"2014-02-01\" \"2014-03-01\" \"2014-04-01\" \"2014-05-01\"\n  [6] \"2014-06-01\" \"2014-07-01\" \"2014-08-01\" \"2014-09-01\" \"2014-11-01\"\n [11] \"2014-12-01\" \"2015-01-01\" \"2015-02-01\" \"2015-03-01\" \"2015-04-01\"\n [16] \"2015-05-01\" \"2015-06-01\" \"2015-07-01\" \"2015-08-01\" \"2015-09-01\"\n [21] \"2015-10-01\" \"2015-11-01\" \"2015-12-01\" \"2016-01-01\" \"2016-02-01\"\n [26] \"2016-03-01\" \"2016-04-01\" \"2016-05-01\" \"2016-06-01\" \"2016-07-01\"\n [31] \"2016-08-01\" \"2016-09-01\" \"2016-10-01\" \"2016-11-01\" \"2016-12-01\"\n [36] \"2017-01-01\" \"2017-02-01\" \"2017-03-01\" \"2017-04-01\" \"2017-05-01\"\n [41] \"2017-06-01\" \"2017-07-01\" \"2017-08-01\" \"2017-09-01\" \"2017-10-01\"\n [46] \"2017-11-01\" \"2017-12-01\" \"2018-01-01\" \"2018-02-01\" \"2018-03-01\"\n [51] \"2018-04-01\" \"2018-05-01\" \"2018-06-01\" \"2018-07-01\" \"2018-08-01\"\n [56] \"2018-09-01\" \"2018-10-01\" \"2018-11-01\" \"2018-12-01\" \"2019-01-01\"\n [61] \"2019-02-01\" \"2019-03-01\" \"2019-04-01\" \"2019-05-01\" \"2019-06-01\"\n [66] \"2019-07-01\" \"2019-08-01\" \"2019-09-01\" \"2019-10-01\" \"2019-11-01\"\n [71] \"2019-12-01\" \"2020-01-01\" \"2020-02-01\" \"2020-03-01\" \"2020-04-01\"\n [76] \"2020-05-01\" \"2020-06-01\" \"2020-07-01\" \"2020-08-01\" \"2020-09-01\"\n [81] \"2020-10-01\" \"2020-11-01\" \"2020-12-01\" \"2021-01-01\" \"2021-02-01\"\n [86] \"2021-03-01\" \"2021-04-01\" \"2021-05-01\" \"2021-06-01\" \"2021-07-01\"\n [91] \"2021-08-01\" \"2021-09-01\" \"2021-10-01\" \"2021-11-01\" \"2021-12-01\"\n [96] \"2022-01-01\" \"2022-02-01\" \"2022-03-01\" \"2022-04-01\" \"2022-05-01\"\n[101] \"2022-06-01\" \"2022-07-01\" \"2022-08-01\" \"2022-09-01\" \"2022-10-01\"\n[106] \"2022-11-01\" \"2022-12-01\" \"2023-01-01\" \"2023-02-01\" \"2023-03-01\"\n[111] \"2023-04-01\" \"2023-05-01\" \"2023-06-01\" \"2023-07-01\" \"2023-08-01\"\n[116] \"2023-09-01\" \"2023-10-01\" \"2023-11-01\" \"2023-12-01\" \"2014-10-01\"\n\n\n\nweatherdata$mean_monthly_temperature &lt;- weatherdata$mean_monthly_temperature %&gt;%\n  ts_impute_vec(period = 2, lambda = \"auto\")\n\nsummary(weatherdata)\n\n   station               DATE            mean_monthly_temperature\n Length:1548        Min.   :2014-01-01   Min.   :25.46           \n Class :character   1st Qu.:2016-07-01   1st Qu.:27.54           \n Mode  :character   Median :2019-01-01   Median :28.09           \n                    Mean   :2018-12-25   Mean   :28.03           \n                    3rd Qu.:2021-07-01   3rd Qu.:28.57           \n                    Max.   :2023-12-01   Max.   :29.78           \n                                                                 \n min_monthly_temperature max_monthly_temperature monthly_rainfall\n Min.   :20.40           Min.   :24.20           Min.   :  0.2   \n 1st Qu.:22.40           1st Qu.:26.60           1st Qu.:115.4   \n Median :22.90           Median :27.50           Median :182.0   \n Mean   :22.91           Mean   :27.34           Mean   :192.4   \n 3rd Qu.:23.40           3rd Qu.:28.10           3rd Qu.:253.2   \n Max.   :26.20           Max.   :29.70           Max.   :692.8   \n NA's   :198             NA's   :198             NA's   :159     \n\n\n\nweatherdata %&gt;%\n  group_by(station) %&gt;%\n  plot_time_series(DATE, mean_monthly_temperature, .facet_ncol = 3)\n\n\n\n\n\n\nweatherdata$min_monthly_temperature &lt;- weatherdata$min_monthly_temperature %&gt;%\n  ts_impute_vec(period = 2, lambda = \"auto\")\n\nsummary(weatherdata)\n\n   station               DATE            mean_monthly_temperature\n Length:1548        Min.   :2014-01-01   Min.   :25.46           \n Class :character   1st Qu.:2016-07-01   1st Qu.:27.54           \n Mode  :character   Median :2019-01-01   Median :28.09           \n                    Mean   :2018-12-25   Mean   :28.03           \n                    3rd Qu.:2021-07-01   3rd Qu.:28.57           \n                    Max.   :2023-12-01   Max.   :29.78           \n                                                                 \n min_monthly_temperature max_monthly_temperature monthly_rainfall\n Min.   :20.40           Min.   :24.20           Min.   :  0.2   \n 1st Qu.:22.40           1st Qu.:26.60           1st Qu.:115.4   \n Median :22.90           Median :27.50           Median :182.0   \n Mean   :22.91           Mean   :27.34           Mean   :192.4   \n 3rd Qu.:23.40           3rd Qu.:28.10           3rd Qu.:253.2   \n Max.   :26.20           Max.   :29.70           Max.   :692.8   \n                         NA's   :198             NA's   :159     \n\n\n\nweatherdata %&gt;%\n  group_by(station) %&gt;%\n  plot_time_series(DATE, min_monthly_temperature, .facet_ncol = 3)\n\n\n\n\n\n\nweatherdata$max_monthly_temperature &lt;- weatherdata$max_monthly_temperature %&gt;%\n  ts_impute_vec(period = 2, lambda = \"auto\")\n\nsummary(weatherdata)\n\n   station               DATE            mean_monthly_temperature\n Length:1548        Min.   :2014-01-01   Min.   :25.46           \n Class :character   1st Qu.:2016-07-01   1st Qu.:27.54           \n Mode  :character   Median :2019-01-01   Median :28.09           \n                    Mean   :2018-12-25   Mean   :28.03           \n                    3rd Qu.:2021-07-01   3rd Qu.:28.57           \n                    Max.   :2023-12-01   Max.   :29.78           \n                                                                 \n min_monthly_temperature max_monthly_temperature monthly_rainfall\n Min.   :20.40           Min.   :24.20           Min.   :  0.2   \n 1st Qu.:22.40           1st Qu.:26.60           1st Qu.:115.4   \n Median :22.90           Median :27.40           Median :182.0   \n Mean   :22.91           Mean   :27.32           Mean   :192.4   \n 3rd Qu.:23.40           3rd Qu.:28.10           3rd Qu.:253.2   \n Max.   :26.20           Max.   :29.70           Max.   :692.8   \n                                                 NA's   :159     \n\n\n\nweatherdata %&gt;%\n  group_by(station) %&gt;%\n  plot_time_series(DATE, max_monthly_temperature, .facet_ncol = 3)\n\n\n\n\n\n\nweatherdata$monthly_rainfall &lt;- weatherdata$monthly_rainfall%&gt;%\n  ts_impute_vec(period = 2, lambda = \"auto\")\n\nsummary(weatherdata)\n\n   station               DATE            mean_monthly_temperature\n Length:1548        Min.   :2014-01-01   Min.   :25.46           \n Class :character   1st Qu.:2016-07-01   1st Qu.:27.54           \n Mode  :character   Median :2019-01-01   Median :28.09           \n                    Mean   :2018-12-25   Mean   :28.03           \n                    3rd Qu.:2021-07-01   3rd Qu.:28.57           \n                    Max.   :2023-12-01   Max.   :29.78           \n min_monthly_temperature max_monthly_temperature monthly_rainfall\n Min.   :20.40           Min.   :24.20           Min.   :  0.2   \n 1st Qu.:22.40           1st Qu.:26.60           1st Qu.:116.8   \n Median :22.90           Median :27.40           Median :180.9   \n Mean   :22.91           Mean   :27.32           Mean   :190.6   \n 3rd Qu.:23.40           3rd Qu.:28.10           3rd Qu.:248.2   \n Max.   :26.20           Max.   :29.70           Max.   :692.8   \n\n\n\nweatherdata %&gt;%\n  group_by(station) %&gt;%\n  plot_time_series(DATE, monthly_rainfall, .facet_ncol = 3)\n\n\n\n\n\n\nwrite_rds(weatherdata, \"data/weather_data_imputed.rds\")"
  },
  {
    "objectID": "Analysis/Forecasting.html#decomposition-of-time-series-object",
    "href": "Analysis/Forecasting.html#decomposition-of-time-series-object",
    "title": "Prototype - Forecasting",
    "section": "Decomposition of Time Series Object",
    "text": "Decomposition of Time Series Object\n\nweatherdata &lt;- read_rds(\"data/weather_data_imputed.rds\")\n\n\nweatherdata %&gt;%\n  filter(station == \"Admiralty\") %&gt;%\n  plot_seasonal_diagnostics(DATE, mean_monthly_temperature)\n\n\n\n\n\n\nweatherdata %&gt;%\n  filter(station == \"Admiralty\") %&gt;%\n  plot_seasonal_diagnostics(DATE, monthly_rainfall)\n\n\n\n\n\n\nweatherdata %&gt;%\n  filter(station == \"Admiralty\") %&gt;%\n  plot_stl_diagnostics(DATE, mean_monthly_temperature,\n                       .frequency = \"auto\", .trend = \"auto\",\n                        .feature_set = c(\"observed\", \"season\", \"trend\", \"remainder\"))\n\n\n\n\n\n\nweatherdata %&gt;%\n  filter(station == \"Admiralty\") %&gt;%\n  plot_stl_diagnostics(DATE, min_monthly_temperature,\n                       .frequency = \"auto\", .trend = \"auto\",\n                        .feature_set = c(\"observed\", \"season\", \"trend\", \"remainder\"))\n\n\n\n\n\n\nweatherdata %&gt;%\n  filter(station == \"Admiralty\") %&gt;%\n  plot_stl_diagnostics(DATE, max_monthly_temperature,\n                       .frequency = \"auto\", .trend = \"auto\",\n                        .feature_set = c(\"observed\", \"season\", \"trend\", \"remainder\"))\n\n\n\n\n\n\nweatherdata %&gt;%\n  filter(station == \"Admiralty\") %&gt;%\n  plot_stl_diagnostics(DATE, monthly_rainfall,\n                       .frequency = \"auto\", .trend = \"auto\",\n                        .feature_set = c(\"observed\", \"season\", \"trend\", \"remainder\"))"
  },
  {
    "objectID": "Analysis/Forecasting.html#selecting-the-data",
    "href": "Analysis/Forecasting.html#selecting-the-data",
    "title": "Prototype - Forecasting",
    "section": "Selecting the data",
    "text": "Selecting the data\nWe use mean monthly temperature of Admiralty station as an example.\nFirst we will select the relevant data column\n\nglimpse(weatherdata)\n\nRows: 1,548\nColumns: 6\nGroups: station [13]\n$ station                  &lt;chr&gt; \"Admiralty\", \"Admiralty\", \"Admiralty\", \"Admir…\n$ DATE                     &lt;date&gt; 2014-01-01, 2014-02-01, 2014-03-01, 2014-04-…\n$ mean_monthly_temperature &lt;dbl&gt; 26.22903, 25.79355, 26.76071, 27.35484, 27.81…\n$ min_monthly_temperature  &lt;dbl&gt; 21.70000, 22.40000, 21.80000, 23.50000, 22.40…\n$ max_monthly_temperature  &lt;dbl&gt; 25.30000, 24.90000, 24.90000, 25.80000, 26.50…\n$ monthly_rainfall         &lt;dbl&gt; 98.8000, 15.8000, 120.0000, 261.4000, 301.000…\n\n\n\nweatherdata_meantemp &lt;- weatherdata %&gt;%\n  filter(station == \"Admiralty\") %&gt;%\n  select(date = DATE, value = mean_monthly_temperature)\n\nweatherdata_meantemp \n\n# A tibble: 119 × 3\n# Groups:   station [1]\n   station   date       value\n   &lt;chr&gt;     &lt;date&gt;     &lt;dbl&gt;\n 1 Admiralty 2014-01-01  26.2\n 2 Admiralty 2014-02-01  25.8\n 3 Admiralty 2014-03-01  26.8\n 4 Admiralty 2014-04-01  27.4\n 5 Admiralty 2014-05-01  27.8\n 6 Admiralty 2014-06-01  28.2\n 7 Admiralty 2014-07-01  28.9\n 8 Admiralty 2014-08-01  28.6\n 9 Admiralty 2014-09-01  28.0\n10 Admiralty 2014-11-01  27.8\n# ℹ 109 more rows"
  },
  {
    "objectID": "Analysis/Forecasting.html#visualise-the-dataset",
    "href": "Analysis/Forecasting.html#visualise-the-dataset",
    "title": "Prototype - Forecasting",
    "section": "Visualise the dataset",
    "text": "Visualise the dataset\n\nweatherdata_meantemp %&gt;%\n  plot_time_series(date, value)"
  },
  {
    "objectID": "Analysis/Forecasting.html#traintest",
    "href": "Analysis/Forecasting.html#traintest",
    "title": "Prototype - Forecasting",
    "section": "Train/Test",
    "text": "Train/Test\n\nsplits &lt;- weatherdata_meantemp %&gt;%\n  initial_time_split(prop = 0.8)\n\nsplits\n\n&lt;Training/Testing/Total&gt;\n&lt;95/24/119&gt;\n\ntraining(splits)\n\n# A tibble: 95 × 3\n# Groups:   station [1]\n   station   date       value\n   &lt;chr&gt;     &lt;date&gt;     &lt;dbl&gt;\n 1 Admiralty 2014-01-01  26.2\n 2 Admiralty 2014-02-01  25.8\n 3 Admiralty 2014-03-01  26.8\n 4 Admiralty 2014-04-01  27.4\n 5 Admiralty 2014-05-01  27.8\n 6 Admiralty 2014-06-01  28.2\n 7 Admiralty 2014-07-01  28.9\n 8 Admiralty 2014-08-01  28.6\n 9 Admiralty 2014-09-01  28.0\n10 Admiralty 2014-11-01  27.8\n# ℹ 85 more rows\n\ntesting(splits)\n\n# A tibble: 24 × 3\n# Groups:   station [1]\n   station   date       value\n   &lt;chr&gt;     &lt;date&gt;     &lt;dbl&gt;\n 1 Admiralty 2022-01-01  27.2\n 2 Admiralty 2022-02-01  27.0\n 3 Admiralty 2022-03-01  26.8\n 4 Admiralty 2022-04-01  27.7\n 5 Admiralty 2022-05-01  27.7\n 6 Admiralty 2022-06-01  28.8\n 7 Admiralty 2022-07-01  27.5\n 8 Admiralty 2022-08-01  28.4\n 9 Admiralty 2022-09-01  27.6\n10 Admiralty 2022-10-01  27.5\n# ℹ 14 more rows"
  },
  {
    "objectID": "Analysis/Forecasting.html#creating-and-fitting-models",
    "href": "Analysis/Forecasting.html#creating-and-fitting-models",
    "title": "Prototype - Forecasting",
    "section": "Creating and Fitting Models",
    "text": "Creating and Fitting Models\n\nModel 1 - Auto ARIMA\n\nmodel_fit_arima_no_boost &lt;- arima_reg() %&gt;%\n  set_engine(engine = \"auto_arima\") %&gt;%\n  fit(value ~ date, data = training(splits))\n\n\n\nBoosted Auto ARIMA\nCreate a boosted ARIMA. Boosting uses XGBOost to model the ARIMA errors.\n\nmodel_fit_arima_boosted &lt;- arima_boost(\n    min_n = 2,\n    learn_rate = 0.015\n) %&gt;%\n    set_engine(engine = \"auto_arima_xgboost\") %&gt;%\n    fit(value ~ date + as.numeric(date) + factor(month(date, label = TRUE), ordered = F),\n        data = training(splits))\n\n\n\nExponential Smoothing\n\nmodel_fit_ets &lt;- exp_smoothing() %&gt;%\n    set_engine(engine = \"ets\") %&gt;%\n    fit(value ~ date, data = training(splits))\n\n\nmodel_fit_ets\n\nparsnip model object\n\nETS(A,N,A) \n\nCall:\n forecast::ets(y = outcome, model = model_ets, damped = damping_ets,  \n\n Call:\n     alpha = alpha, beta = beta, gamma = gamma) \n\n  Smoothing parameters:\n    alpha = 0.3744 \n    gamma = 1e-04 \n\n  Initial states:\n    l = 27.4844 \n    s = -0.853 -0.4341 0.2104 0.2587 0.5635 0.6531\n           0.3323 0.5585 0.3482 0.0175 -0.7688 -0.8861\n\n  sigma:  0.4493\n\n     AIC     AICc      BIC \n295.4710 301.5470 333.7792 \n\n\n\ncalibration_ets &lt;- model_fit_ets %&gt;%\n    modeltime_calibrate(new_data = testing(splits))\n\ncalibration_ets\n\n# Modeltime Table\n# A tibble: 1 × 5\n  .model_id .model   .model_desc .type .calibration_data\n      &lt;int&gt; &lt;list&gt;   &lt;chr&gt;       &lt;chr&gt; &lt;list&gt;           \n1         1 &lt;fit[+]&gt; ETS(A,N,A)  Test  &lt;tibble [24 × 4]&gt;\n\n\n\nforecast_results &lt;- calibration_ets %&gt;%\n    modeltime_forecast(\n        new_data    = testing(splits),\n        actual_data = weatherdata_meantemp\n    ) \n\ndatatable(forecast_results)\n\n\n\n\n\n\ncalibration_ets %&gt;%\n    modeltime_forecast(\n        new_data    = testing(splits),\n        actual_data = weatherdata_meantemp\n    ) %&gt;%\n    plot_modeltime_forecast(\n      .legend_max_width = 25\n    )\n\n\n\n\n\n\n\nAccuracy Metrics\n\naccuracy_metrics &lt;- calibration_ets %&gt;%\n  modeltime_accuracy() \n\n\naccuracy_metrics$mae\n\n[1] 0.4177054\n\naccuracy_metrics$mape\n\n[1] 1.510336\n\naccuracy_metrics$rmse\n\n[1] 0.5062106\n\n\n\n\nProphet\n\nmodel_fit_prophet &lt;- prophet_reg() %&gt;%\n    set_engine(engine = \"prophet\") %&gt;%\n    fit(value ~ date, data = training(splits))\n\n\n\nLinear Regression\n\nmodel_fit_lm &lt;- linear_reg() %&gt;%\n    set_engine(\"lm\") %&gt;%\n    fit(value ~ as.numeric(date) + factor(month(date, label = TRUE), ordered = FALSE),\n        data = training(splits))\n\n\n\nMARS\n\nmodel_spec_mars &lt;- mars(mode = \"regression\") %&gt;%\n    set_engine(\"earth\") \n\nrecipe_spec &lt;- recipe(value ~ date, data = training(splits)) %&gt;%\n    step_date(date, features = \"month\", ordinal = FALSE) %&gt;%\n    step_mutate(date_num = as.numeric(date)) %&gt;%\n    step_normalize(date_num) %&gt;%\n    step_rm(date)\n  \nwflw_fit_mars &lt;- workflow() %&gt;%\n    add_recipe(recipe_spec) %&gt;%\n    add_model(model_spec_mars) %&gt;%\n    fit(training(splits))"
  },
  {
    "objectID": "Analysis/Forecasting.html#add-fitted-models-to-a-model-table",
    "href": "Analysis/Forecasting.html#add-fitted-models-to-a-model-table",
    "title": "Prototype - Forecasting",
    "section": "Add Fitted Models to a Model table",
    "text": "Add Fitted Models to a Model table\n\nmodels_tbl &lt;- modeltime_table(\n    model_fit_arima_no_boost,\n    model_fit_arima_boosted,\n    model_fit_ets,\n    model_fit_prophet,\n    model_fit_lm,\n    wflw_fit_mars\n)\n\nmodels_tbl\n\n# Modeltime Table\n# A tibble: 6 × 3\n  .model_id .model     .model_desc                              \n      &lt;int&gt; &lt;list&gt;     &lt;chr&gt;                                    \n1         1 &lt;fit[+]&gt;   ARIMA(1,0,0)(2,1,0)[12]                  \n2         2 &lt;fit[+]&gt;   ARIMA(1,0,0)(2,1,0)[12] W/ XGBOOST ERRORS\n3         3 &lt;fit[+]&gt;   ETS(A,N,A)                               \n4         4 &lt;fit[+]&gt;   PROPHET                                  \n5         5 &lt;fit[+]&gt;   LM                                       \n6         6 &lt;workflow&gt; EARTH"
  },
  {
    "objectID": "Analysis/Forecasting.html#calibrate-the-model-to-a-testing-set",
    "href": "Analysis/Forecasting.html#calibrate-the-model-to-a-testing-set",
    "title": "Prototype - Forecasting",
    "section": "Calibrate the model to a testing set",
    "text": "Calibrate the model to a testing set\n\ncalibration_tbl &lt;- models_tbl %&gt;%\n    modeltime_calibrate(new_data = testing(splits))\n\ncalibration_tbl\n\n# Modeltime Table\n# A tibble: 6 × 5\n  .model_id .model     .model_desc                       .type .calibration_data\n      &lt;int&gt; &lt;list&gt;     &lt;chr&gt;                             &lt;chr&gt; &lt;list&gt;           \n1         1 &lt;fit[+]&gt;   ARIMA(1,0,0)(2,1,0)[12]           Test  &lt;tibble [24 × 4]&gt;\n2         2 &lt;fit[+]&gt;   ARIMA(1,0,0)(2,1,0)[12] W/ XGBOO… Test  &lt;tibble [24 × 4]&gt;\n3         3 &lt;fit[+]&gt;   ETS(A,N,A)                        Test  &lt;tibble [24 × 4]&gt;\n4         4 &lt;fit[+]&gt;   PROPHET                           Test  &lt;tibble [24 × 4]&gt;\n5         5 &lt;fit[+]&gt;   LM                                Test  &lt;tibble [24 × 4]&gt;\n6         6 &lt;workflow&gt; EARTH                             Test  &lt;tibble [24 × 4]&gt;"
  },
  {
    "objectID": "Analysis/Forecasting.html#testing-set-forecast-accuracy-evaluation",
    "href": "Analysis/Forecasting.html#testing-set-forecast-accuracy-evaluation",
    "title": "Prototype - Forecasting",
    "section": "Testing Set Forecast & Accuracy Evaluation",
    "text": "Testing Set Forecast & Accuracy Evaluation\n\nvisualising forecast test\n\ncalibration_tbl %&gt;%\n    modeltime_forecast(\n        new_data    = testing(splits),\n        actual_data = weatherdata_meantemp\n    ) %&gt;%\n    plot_modeltime_forecast(\n      .legend_max_width = 25\n    )\n\n\n\n\n\n\n\nAccuracy Metrics\n\ncalibration_tbl %&gt;%\n    modeltime_accuracy() %&gt;%\n    table_modeltime_accuracy()"
  },
  {
    "objectID": "Analysis/Forecasting.html#refit-to-full-dataset-and-forecast-forward",
    "href": "Analysis/Forecasting.html#refit-to-full-dataset-and-forecast-forward",
    "title": "Prototype - Forecasting",
    "section": "Refit to full dataset and forecast forward",
    "text": "Refit to full dataset and forecast forward\n\nrefit_tbl &lt;- calibration_tbl %&gt;%\n    modeltime_refit(data = weatherdata_meantemp)\n\nrefit_tbl %&gt;%\n    modeltime_forecast(h = \"36 months\", actual_data = weatherdata_meantemp) %&gt;%\n    plot_modeltime_forecast(\n      .legend_max_width = 25\n\n    )"
  },
  {
    "objectID": "Analysis/Forecasting.html#selecting-the-data-1",
    "href": "Analysis/Forecasting.html#selecting-the-data-1",
    "title": "Prototype - Forecasting",
    "section": "Selecting the data",
    "text": "Selecting the data\nWe use mean monthly temperature of Admiralty station as an example.\nFirst we will select the relevant data column\n\nweatherdata_rf &lt;- weatherdata %&gt;%\n  filter(station == \"Admiralty\") %&gt;%\n  select(date = DATE, value = monthly_rainfall)\n\nweatherdata_rf \n\n# A tibble: 119 × 3\n# Groups:   station [1]\n   station   date       value\n   &lt;chr&gt;     &lt;date&gt;     &lt;dbl&gt;\n 1 Admiralty 2014-01-01  98.8\n 2 Admiralty 2014-02-01  15.8\n 3 Admiralty 2014-03-01 120  \n 4 Admiralty 2014-04-01 261. \n 5 Admiralty 2014-05-01 301  \n 6 Admiralty 2014-06-01 196  \n 7 Admiralty 2014-07-01 238. \n 8 Admiralty 2014-08-01 264. \n 9 Admiralty 2014-09-01 207. \n10 Admiralty 2014-11-01 236. \n# ℹ 109 more rows"
  },
  {
    "objectID": "Analysis/Forecasting.html#visualise-the-dataset-1",
    "href": "Analysis/Forecasting.html#visualise-the-dataset-1",
    "title": "Prototype - Forecasting",
    "section": "Visualise the dataset",
    "text": "Visualise the dataset\n\nweatherdata_rf %&gt;%\n  plot_time_series(date, value)"
  },
  {
    "objectID": "Analysis/Forecasting.html#traintest-1",
    "href": "Analysis/Forecasting.html#traintest-1",
    "title": "Prototype - Forecasting",
    "section": "Train/Test",
    "text": "Train/Test\n\nsplits &lt;- weatherdata_rf %&gt;%\n  initial_time_split(prop = 0.8)"
  },
  {
    "objectID": "Analysis/Forecasting.html#creating-and-fitting-models-1",
    "href": "Analysis/Forecasting.html#creating-and-fitting-models-1",
    "title": "Prototype - Forecasting",
    "section": "Creating and Fitting Models",
    "text": "Creating and Fitting Models\n\nModel 1 - Auto ARIMA\n\nmodel_fit_arima_no_boost &lt;- arima_reg() %&gt;%\n  set_engine(engine = \"auto_arima\") %&gt;%\n  fit(value ~ date, data = training(splits))\n\n\n\nBoosted Auto ARIMA\nCreate a boosted ARIMA. Boosting uses XGBOost to model the ARIMA errors.\n\nmodel_fit_arima_boosted &lt;- arima_boost(\n    min_n = 2,\n    learn_rate = 0.015\n) %&gt;%\n    set_engine(engine = \"auto_arima_xgboost\") %&gt;%\n    fit(value ~ date + as.numeric(date) + factor(month(date, label = TRUE), ordered = F),\n        data = training(splits))\n\n\n\nExponential Smoothing\n\nmodel_fit_ets &lt;- exp_smoothing() %&gt;%\n    set_engine(engine = \"ets\") %&gt;%\n    fit(value ~ date, data = training(splits))\n\n\n\nProphet\n\nmodel_fit_prophet &lt;- prophet_reg() %&gt;%\n    set_engine(engine = \"prophet\") %&gt;%\n    fit(value ~ date, data = training(splits))\n\n\n\nLinear Regression\n\nmodel_fit_lm &lt;- linear_reg() %&gt;%\n    set_engine(\"lm\") %&gt;%\n    fit(value ~ as.numeric(date) + factor(month(date, label = TRUE), ordered = FALSE),\n        data = training(splits))\n\n\n\nMARS\n\nmodel_spec_mars &lt;- mars(mode = \"regression\") %&gt;%\n    set_engine(\"earth\") \n\nrecipe_spec &lt;- recipe(value ~ date, data = training(splits)) %&gt;%\n    step_date(date, features = \"month\", ordinal = FALSE) %&gt;%\n    step_mutate(date_num = as.numeric(date)) %&gt;%\n    step_normalize(date_num) %&gt;%\n    step_rm(date)\n  \nwflw_fit_mars &lt;- workflow() %&gt;%\n    add_recipe(recipe_spec) %&gt;%\n    add_model(model_spec_mars) %&gt;%\n    fit(training(splits))"
  },
  {
    "objectID": "Analysis/Forecasting.html#add-fitted-models-to-a-model-table-1",
    "href": "Analysis/Forecasting.html#add-fitted-models-to-a-model-table-1",
    "title": "Prototype - Forecasting",
    "section": "Add Fitted Models to a Model table",
    "text": "Add Fitted Models to a Model table\n\nmodels_tbl &lt;- modeltime_table(\n    model_fit_arima_no_boost,\n    model_fit_arima_boosted,\n    model_fit_ets,\n    model_fit_prophet,\n    model_fit_lm,\n    wflw_fit_mars\n)\n\nmodels_tbl\n\n# Modeltime Table\n# A tibble: 6 × 3\n  .model_id .model     .model_desc                                      \n      &lt;int&gt; &lt;list&gt;     &lt;chr&gt;                                            \n1         1 &lt;fit[+]&gt;   ARIMA(1,0,0) WITH NON-ZERO MEAN                  \n2         2 &lt;fit[+]&gt;   ARIMA(1,0,0) WITH NON-ZERO MEAN W/ XGBOOST ERRORS\n3         3 &lt;fit[+]&gt;   ETS(A,N,N)                                       \n4         4 &lt;fit[+]&gt;   PROPHET                                          \n5         5 &lt;fit[+]&gt;   LM                                               \n6         6 &lt;workflow&gt; EARTH"
  },
  {
    "objectID": "Analysis/Forecasting.html#calibrate-the-model-to-a-testing-set-1",
    "href": "Analysis/Forecasting.html#calibrate-the-model-to-a-testing-set-1",
    "title": "Prototype - Forecasting",
    "section": "Calibrate the model to a testing set",
    "text": "Calibrate the model to a testing set\n\ncalibration_tbl &lt;- models_tbl %&gt;%\n    modeltime_calibrate(new_data = testing(splits))\n\ncalibration_tbl\n\n# Modeltime Table\n# A tibble: 6 × 5\n  .model_id .model     .model_desc                       .type .calibration_data\n      &lt;int&gt; &lt;list&gt;     &lt;chr&gt;                             &lt;chr&gt; &lt;list&gt;           \n1         1 &lt;fit[+]&gt;   ARIMA(1,0,0) WITH NON-ZERO MEAN   Test  &lt;tibble [24 × 4]&gt;\n2         2 &lt;fit[+]&gt;   ARIMA(1,0,0) WITH NON-ZERO MEAN … Test  &lt;tibble [24 × 4]&gt;\n3         3 &lt;fit[+]&gt;   ETS(A,N,N)                        Test  &lt;tibble [24 × 4]&gt;\n4         4 &lt;fit[+]&gt;   PROPHET                           Test  &lt;tibble [24 × 4]&gt;\n5         5 &lt;fit[+]&gt;   LM                                Test  &lt;tibble [24 × 4]&gt;\n6         6 &lt;workflow&gt; EARTH                             Test  &lt;tibble [24 × 4]&gt;"
  },
  {
    "objectID": "Analysis/Forecasting.html#testing-set-forecast-accuracy-evaluation-1",
    "href": "Analysis/Forecasting.html#testing-set-forecast-accuracy-evaluation-1",
    "title": "Prototype - Forecasting",
    "section": "Testing Set Forecast & Accuracy Evaluation",
    "text": "Testing Set Forecast & Accuracy Evaluation\n\nvisualising forecast test\n\ncalibration_tbl %&gt;%\n    modeltime_forecast(\n        new_data    = testing(splits),\n        actual_data = weatherdata_rf\n    ) %&gt;%\n    plot_modeltime_forecast(\n      .legend_max_width = 25\n    )\n\n\n\n\n\n\n\nAccuracy Metrics\n\ncalibration_tbl %&gt;%\n    modeltime_accuracy() %&gt;%\n    table_modeltime_accuracy()"
  },
  {
    "objectID": "Analysis/Forecasting.html#refit-to-full-dataset-and-forecast-forward-1",
    "href": "Analysis/Forecasting.html#refit-to-full-dataset-and-forecast-forward-1",
    "title": "Prototype - Forecasting",
    "section": "Refit to full dataset and forecast forward",
    "text": "Refit to full dataset and forecast forward\n\nrefit_tbl &lt;- calibration_tbl %&gt;%\n    modeltime_refit(data = weatherdata_rf)\n\nrefit_tbl %&gt;%\n    modeltime_forecast(h = \"36 months\", actual_data = weatherdata_rf) %&gt;%\n    plot_modeltime_forecast(\n      .legend_max_width = 25)"
  },
  {
    "objectID": "Analysis/Forecasting.html#removing-anomalies",
    "href": "Analysis/Forecasting.html#removing-anomalies",
    "title": "Prototype - Forecasting",
    "section": "Removing anomalies",
    "text": "Removing anomalies\n\nanomalize_tbl &lt;- weatherdata %&gt;%\n  group_by(station) %&gt;%\n  anomalize(\n    .date_var = DATE,\n    .value = monthly_rainfall,\n    .iqr_alpha = 0.05,\n    .max_anomalies = 0.20,\n    .message = FALSE\n  )\n\nglimpse(anomalize_tbl)\n\nRows: 1,548\nColumns: 13\nGroups: station [13]\n$ station           &lt;chr&gt; \"Admiralty\", \"Admiralty\", \"Admiralty\", \"Admiralty\", …\n$ DATE              &lt;date&gt; 2014-01-01, 2014-02-01, 2014-03-01, 2014-04-01, 201…\n$ observed          &lt;dbl&gt; 98.8000, 15.8000, 120.0000, 261.4000, 301.0000, 196.…\n$ season            &lt;dbl&gt; -61.968335, 5.379484, -3.716316, 57.531905, -24.3441…\n$ trend             &lt;dbl&gt; 141.0973, 155.1798, 169.2622, 180.8267, 192.3911, 20…\n$ remainder         &lt;dbl&gt; 19.6710109, -144.7592543, -45.5458998, 23.0414366, 1…\n$ seasadj           &lt;dbl&gt; 160.76834, 10.42052, 123.71632, 203.86810, 325.34418…\n$ anomaly           &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\"…\n$ anomaly_direction &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ anomaly_score     &lt;dbl&gt; 14.471962, 149.958304, 50.744949, 17.842387, 127.754…\n$ recomposed_l1     &lt;dbl&gt; -176.51789, -95.08763, -90.10098, -17.28832, -87.599…\n$ recomposed_l2     &lt;dbl&gt; 345.1740, 426.6042, 431.5909, 504.4035, 434.0919, 46…\n$ observed_clean    &lt;dbl&gt; 98.8000, 15.8000, 120.0000, 261.4000, 301.0000, 196.…\n\n\n\nanomalize_tbl %&gt;%\n  group_by(station) %&gt;%\n  filter(station == c(\"Admiralty\", \"Ang Mo Kio\", \"Changi\")) %&gt;%\n    plot_anomalies_decomp(\n        .date_var = DATE\n    )\n\n\n\n\n\n\nanomalize_tbl %&gt;%\n  group_by(station) %&gt;%\n  filter(station == c(\"Clementi\", \"Ang Mo Kio\", \"Changi\")) %&gt;%\n  plot_anomalies(\n        DATE,\n        .facet_ncol = 3\n    )\n\n\n\n\n\n\nanomalize_tbl %&gt;%\n    group_by(station) %&gt;%\n   filter(station == c(\"Admiralty\", \"Ang Mo Kio\", \"Changi\")) %&gt;%\n    plot_anomalies_cleaned(\n        DATE,\n        .facet_ncol = 2\n    )"
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "Finley Malloc",
    "section": "",
    "text": "University of California, San Diego | San Diego, CA PhD in Mathematics | Sept 2011 - June 2015\nMacalester College | St. Paul MA B.A in Economics | Sept 2007 - June 2011"
  },
  {
    "objectID": "about.html#experience",
    "href": "about.html#experience",
    "title": "Finley Malloc",
    "section": "",
    "text": "Wengo Analytics | Head Data Scientist | April 2018 - present\nGeoScynce | Chief Analyst | Sept 2012 - April 2018"
  },
  {
    "objectID": "introduction.html",
    "href": "introduction.html",
    "title": "Introduction - Rain or Shine: Unveiling The Mysteries of Singapore Weather",
    "section": "",
    "text": "1. The Motivation\nAs a small, low-lying city-state, Singapore is vulnerable to the effects of climate change which has brought about more extreme weather patterns - rising sea levels, dry spells and intense rainfall which at times can lead to flash floods.\n\nAccording to an infographic above by the National Climate Change Secretariat Singapore:\n\nDaily mean temperatures are projected to increase by 1.4 to 4.6 degrees celsius; and\nThe contrast between the wet months (November to January) and dry months (February and June to September) is likely to be more pronounced.\n\nIn Jan 2024, the Centre for Climate Research Singapore (CCRS) announced the Third National Climate Change Study (V3) which provided potential scenarios of our future based on low, medium, and high global greenhouse gas emissions.\n\nVery hot days will become more frequent.\nExtreme daily rainfall is projected to intensify.\nThe mean sea level around Singapore is projected to rise up to 1.15m by end century, and up to around 2m by 2150 under the high emissions scenario.\n\nIt is important that we better understand how climate change has been affecting Singapore, by understanding the trends in our daily temperatures and rainfall over the years, and utilise historical data to forecast future climate data. It will provide guidance on whether and how Singapore will need to urgently develop ways to mitigate and adapt.\n\n\n2. Objectives\nOur group utilised data from weather.gov.sg to carry out the analysis of temperature and rainfall over a 10-year period from 2014 to 2023 and across 13 different weather stations. Our aim was to:\n\nUnderstand the trend of mean, maximum, minimum temperature and rainfall across the years, months and weather stations.\nUnderstand if the changes, if any, in mean, maximum, minimum temperature and rainfall across the years were statistically significant.\nUnderstand if certain months were drier or wetter/hotter or cooler than others.\nUnderstand if certain locations (weather stations) were drier or wetter/hotter or cooler than others.\nTo conduct a time-series forecasting of temperature and rainfall in the next 10 years\n\n\n\n3. The Application\nThe group showcased our discoveries through our Shiny Application enabling analysts and policymakers to grasp the impacts of climate change on Singapore. Users can gain insights from the historical trends of temperatures and rainfall, and the forecasts of our future climate conditions."
  },
  {
    "objectID": "index.html#group-12---rain-or-shine-unveiling-the-mysteries-of-singapore-weather",
    "href": "index.html#group-12---rain-or-shine-unveiling-the-mysteries-of-singapore-weather",
    "title": "Rain or Shine: Unveiling The Mysteries of Singapore Weather",
    "section": "Group 12 - Rain or Shine: Unveiling The Mysteries of Singapore Weather",
    "text": "Group 12 - Rain or Shine: Unveiling The Mysteries of Singapore Weather"
  },
  {
    "objectID": "ShinyApp/ShinyApp.html",
    "href": "ShinyApp/ShinyApp.html",
    "title": "Shiny Application",
    "section": "",
    "text": "Click on the link below for our Shiny Application:\n\n\n\n\n\n\n\nFigure 1\n\n\n\nClick below for the user guide to the Shiny Application:"
  }
]